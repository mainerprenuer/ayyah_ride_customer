com.baseflow.permissionhandler.ServiceManager: boolean isLocationServiceEnabledKitKat(android.content.Context)
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.baseflow.geolocator.tasks.TaskContext: com.baseflow.geolocator.data.wrapper.ChannelResponse getResult()
com.baseflow.location_permissions.R$drawable
com.baseflow.googleapiavailability.R$string: R$string()
com.baseflow.geolocator.tasks.LocationUsingLocationManagerTask: void startTask()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
com.baseflow.geolocator.R$style: int TextAppearance_Compat_Notification_Line2
androidx.window.R$styleable: int[] SplitPairRule
com.baseflow.geolocator.R$string: int common_google_play_services_install_text
com.baseflow.geolocator.tasks.TaskFactory: com.baseflow.geolocator.tasks.Task createForwardGeocodingTask(android.content.Context,io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.baseflow.geolocator.OnCompletionListener)
com.baseflow.googleapiavailability.MethodCallHandlerImpl: android.content.Context applicationContext
androidx.window.layout.WindowMetrics
com.baseflow.location_permissions.R$styleable
com.baseflow.location_permissions.R$id: int accessibility_custom_action_7
com.baseflow.permissionhandler.R$styleable: int[] GradientColorItem
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
io.flutter.view.AccessibilityViewEmbedder
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.baseflow.geolocator.GeolocatorPlugin: void onCompletion(java.util.UUID)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.window.R$attr: int finishSecondaryWithPrimary
com.baseflow.location_permissions.LocationPermissionsPlugin$LocationServiceBroadcastReceiver
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
androidx.window.embedding.SplitController
com.baseflow.geolocator.data.ForwardGeocodingOptions: java.lang.String mAddressToLookup
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.baseflow.geolocator.tasks.LocationUsingLocationManagerTask: com.baseflow.geolocator.data.LocationOptions mLocationOptions
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
com.baseflow.googleapiavailability.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
com.baseflow.location_permissions.R$dimen: int notification_large_icon_height
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.baseflow.googleapiavailability.R$dimen: int compat_button_inset_horizontal_material
com.baseflow.geolocator.R$id: int tag_accessibility_clickable_spans
com.baseflow.permissionhandler.R$string
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.window.embedding.SplitPairFilter: int hashCode()
com.baseflow.geolocator.data.Result: Result(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
com.baseflow.location_permissions.R$id: int notification_background
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void onDetachedFromActivityForConfigChanges()
com.baseflow.permissionhandler.R$attr: int placeholderActivityName
com.baseflow.googleapiavailability.R$string: int common_open_on_phone
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.baseflow.googleapiavailability.R$dimen: int notification_large_icon_height
com.baseflow.geolocator.R$attr: int activityName
com.baseflow.location_permissions.R$id: int italic
com.baseflow.geolocator.R$id: int accessibility_custom_action_13
com.baseflow.location_permissions.R$styleable: int FontFamily_fontProviderPackage
kotlinx.coroutines.channels.ArrayChannel: int size
com.baseflow.permissionhandler.BuildConfig: boolean DEBUG
com.baseflow.permissionhandler.PermissionConstants: int SERVICE_STATUS_ENABLED
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_text_light_focused
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_5
com.baseflow.geolocator.R$string: int common_google_play_services_unknown_issue
androidx.window.core.Version: int compareTo(java.lang.Object)
com.baseflow.geolocator.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.baseflow.permissionhandler.R$attr: int secondaryActivityName
com.google.android.gms.maps.model.PolygonOptions: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.GeneratedPluginRegistrant
com.baseflow.geolocator.R$styleable
com.baseflow.permissionhandler.PermissionConstants: int SERVICE_STATUS_UNKNOWN
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_centerX
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_light
io.flutter.embedding.android.FlutterSplashView$SavedState
com.baseflow.geolocator.utils.MainThreadDispatcher$1: java.lang.Object val$details
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
com.baseflow.location_permissions.LocationPermissionsPlugin: io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener createAddRequestPermissionsResultListener(com.baseflow.location_permissions.LocationPermissionsPlugin)
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_text_dark_normal_background
androidx.window.layout.HardwareFoldingFeature$Type
com.baseflow.location_permissions.R$attr: int secondaryActivityName
androidx.window.R$id: R$id()
com.baseflow.location_permissions.R$id: int text2
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
com.baseflow.geolocator.R$dimen: int notification_top_pad
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.baseflow.permissionhandler.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
androidx.lifecycle.CompositeGeneratedAdaptersObserver
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_28
com.baseflow.googleapiavailability.R$styleable: int SplitPairFilter_primaryActivityName
com.baseflow.permissionhandler.R$id: int notification_main_column_container
com.baseflow.googleapiavailability.R$id: int line1
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.window.R$attr: int secondaryActivityAction
com.baseflow.googleapiavailability.R$id: int action_image
com.baseflow.geolocator.data.PositionMapper: java.util.Map toHashMap(android.location.Location)
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_tileMode
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
com.baseflow.googleapiavailability.R$attr: int splitMinSmallestWidth
com.baseflow.geolocator.R$styleable: int[] Capability
com.baseflow.geolocator.R$styleable: int SplitPairRule_splitRatio
kotlin.jvm.internal.FunctionReference: int arity
com.baseflow.permissionhandler.R$id: int tag_accessibility_actions
com.baseflow.googleapiavailability.R$integer
com.baseflow.permissionhandler.R$styleable: int FontFamily_fontProviderPackage
com.baseflow.permissionhandler.R$styleable: int FontFamily_fontProviderFetchStrategy
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_icon_light_normal
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
androidx.window.embedding.SplitPairRule
androidx.window.embedding.EmbeddingCompat
com.baseflow.permissionhandler.R$styleable: int SplitPairFilter_primaryActivityName
androidx.window.embedding.EmbeddingInterfaceCompat
com.baseflow.geolocator.R$string
com.baseflow.geolocator.R$string: int common_google_play_services_install_title
androidx.window.embedding.SplitRule: int getMinWidth()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
com.baseflow.geolocator.R$styleable: int GradientColorItem_android_offset
com.baseflow.geolocator.R$id
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_text_light_focused
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_light_focused
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.baseflow.googleapiavailability.R$dimen: int notification_small_icon_size_as_large
com.baseflow.location_permissions.R$integer: int status_bar_notification_info_maxnum
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.baseflow.permissionhandler.R$drawable: int notification_bg_low_normal
com.baseflow.permissionhandler.PermissionUtils
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.baseflow.geolocator.R$styleable: int GradientColor_android_centerX
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_6
com.baseflow.location_permissions.R$style: int Widget_Compat_NotificationActionText
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_9
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: void stopTask()
com.baseflow.location_permissions.R$attr: int splitLayoutDirection
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
com.baseflow.permissionhandler.R$styleable: int SplitPairRule_splitRatio
com.baseflow.geolocator.data.Result: boolean $assertionsDisabled
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_icon_light_normal_background
com.baseflow.geolocator.R$styleable: int SplitPlaceholderRule_placeholderActivityName
androidx.window.layout.SidecarAdapter: SidecarAdapter()
com.baseflow.permissionhandler.R$dimen: int compat_button_inset_vertical_material
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
com.baseflow.location_permissions.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.baseflow.geolocator.R$attr: int splitLayoutDirection
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.baseflow.location_permissions.R$attr: int splitRatio
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_22
com.baseflow.permissionhandler.R$attr: int fontProviderFetchTimeout
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_CODE_IGNORE_BATTERY_OPTIMIZATIONS
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
kotlinx.coroutines.channels.ConflatedChannel
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_10
com.baseflow.geolocator.GeolocatorPlugin: void onCancel(java.lang.Object)
com.baseflow.geolocator.R$attr: int splitMinWidth
com.baseflow.permissionhandler.AppSettingsManager
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.baseflow.permissionhandler.PermissionHandlerPlugin: void startListeningToActivity(android.app.Activity,com.baseflow.permissionhandler.PermissionManager$ActivityRegistry,com.baseflow.permissionhandler.PermissionManager$PermissionRegistry)
com.baseflow.googleapiavailability.R$styleable: int[] GradientColor
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_SENSORS
com.baseflow.googleapiavailability.R$styleable: int ActivityFilter_activityAction
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: int GEOLOCATION_ACCURACY_MEDIUM
com.baseflow.geolocator.R$color: int notification_icon_bg_color
com.baseflow.googleapiavailability.R$styleable: int GradientColorItem_android_offset
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_fontVariationSettings
com.baseflow.permissionhandler.R$styleable: R$styleable()
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
kotlinx.coroutines.internal.LockFreeTaskQueue
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_icon_dark
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.baseflow.geolocator.data.CalculateDistanceOptions: CalculateDistanceOptions(com.baseflow.geolocator.data.Coordinate,com.baseflow.geolocator.data.Coordinate)
com.baseflow.permissionhandler.PermissionHandlerPlugin: PermissionHandlerPlugin()
androidx.window.embedding.SplitRule$LayoutDir
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.baseflow.location_permissions.R$styleable: int[] Capability
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
com.baseflow.location_permissions.LocationPermissionsPlugin: void emitLocationServiceStatus(boolean)
kotlinx.coroutines.scheduling.LimitingDispatcher
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
com.baseflow.googleapiavailability.R$style: int TextAppearance_Compat_Notification_Line2
com.baseflow.permissionhandler.R$style: R$style()
com.baseflow.location_permissions.R$attr: int fontProviderCerts
kotlinx.coroutines.CompletedExceptionally: int _handled
com.baseflow.geolocator.tasks.TaskContext: com.baseflow.geolocator.OnCompletionListener mCompletionListener
com.baseflow.location_permissions.R$styleable: int ColorStateListItem_android_color
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.window.embedding.SplitPairRule: int hashCode()
androidx.window.core.Bounds: int hashCode()
com.baseflow.permissionhandler.R$id: int tag_on_apply_window_listener
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
com.baseflow.geolocator.tasks.ForwardGeocodingTask: android.content.Context mContext
com.baseflow.permissionhandler.AppSettingsManager: AppSettingsManager()
com.baseflow.location_permissions.LocationPermissionsPlugin: java.lang.Boolean isLocationPermission(java.lang.String)
com.baseflow.location_permissions.R$dimen: int notification_small_icon_background_padding
com.baseflow.geolocator.R$styleable: int FontFamily_fontProviderQuery
com.baseflow.geolocator.R$attr: int alwaysExpand
com.baseflow.geolocator.R$layout: int notification_action
com.baseflow.geolocator.R$dimen
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
com.baseflow.location_permissions.R$id: int accessibility_custom_action_22
androidx.window.embedding.EmbeddingBackend
io.flutter.plugins.googlemaps.GoogleMapController
com.example.ayyah_ride_customer.MainActivity: MainActivity()
com.baseflow.geolocator.data.wrapper.EventResponse: io.flutter.plugin.common.EventChannel$EventSink mSink
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
com.baseflow.geolocator.R$styleable: int SplitPlaceholderRule_splitRatio
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
kotlinx.coroutines.StandaloneCoroutine
com.baseflow.geolocator.utils.MainThreadDispatcher
com.baseflow.location_permissions.R$styleable: int[] SplitPairFilter
com.baseflow.googleapiavailability.R$string: int common_google_play_services_install_text
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
com.baseflow.googleapiavailability.R$attr: int scopeUris
com.baseflow.permissionhandler.MethodCallHandlerImpl: android.content.Context applicationContext
com.baseflow.location_permissions.R$dimen: int compat_button_padding_horizontal_material
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.window.R$styleable: int[] ActivityFilter
com.baseflow.geolocator.R$id: int dialog_button
com.baseflow.geolocator.R$id: int none
com.baseflow.geolocator.data.Coordinate
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_icon_dark_normal
com.baseflow.geolocator.R$string: R$string()
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_4
com.baseflow.location_permissions.R$id: int accessibility_custom_action_1
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.baseflow.googleapiavailability.R$layout: int notification_template_part_chronometer
com.baseflow.permissionhandler.R$attr: int splitMinWidth
com.google.android.gms.location.LocationCallback: LocationCallback()
com.baseflow.permissionhandler.R$id: int time
kotlin.jvm.internal.FunctionReference: boolean isExternal()
com.baseflow.geolocator.R$styleable: int GradientColor_android_type
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.window.R$attr: int clearTop
androidx.window.core.Bounds: int getLeft()
com.baseflow.geolocator.R$styleable: int GradientColor_android_gradientRadius
com.baseflow.googleapiavailability.R$styleable
com.baseflow.geolocator.data.ReverseGeocodingOptions: com.baseflow.geolocator.data.Coordinate mCoordinate
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
com.baseflow.googleapiavailability.R$drawable: int notification_bg_normal_pressed
com.baseflow.googleapiavailability.R$dimen: int notification_top_pad
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_gradientRadius
com.baseflow.permissionhandler.MethodCallHandlerImpl: com.baseflow.permissionhandler.ServiceManager serviceManager
com.baseflow.geolocator.data.ReverseGeocodingOptions: ReverseGeocodingOptions(com.baseflow.geolocator.data.Coordinate,java.util.Locale)
com.baseflow.geolocator.data.AddressMapper: AddressMapper()
androidx.window.embedding.SplitController: SplitController()
com.baseflow.permissionhandler.PermissionManager$PermissionRegistry
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
com.baseflow.location_permissions.LocationPermissionsPlugin: void onCancel(java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.baseflow.geolocator.tasks.TaskContext: android.content.Context mContext
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.baseflow.googleapiavailability.R$dimen: int notification_big_circle_margin
com.baseflow.geolocator.data.CalculateDistanceOptions: com.baseflow.geolocator.data.Coordinate getSourceCoordinates()
com.baseflow.geolocator.tasks.LocationUsingLocationManagerTask: LocationUsingLocationManagerTask(com.baseflow.geolocator.tasks.TaskContext)
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_29
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_16
androidx.window.R$attr: int activityAction
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
com.baseflow.location_permissions.R$color: R$color()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
com.baseflow.geolocator.R$style: R$style()
com.baseflow.geolocator.R$id: int rtl
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.baseflow.geolocator.tasks.Task: void startTask()
com.baseflow.permissionhandler.R$styleable: int[] ActivityRule
kotlin.jvm.internal.Lambda: int getArity()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.R$attr: R$attr()
com.baseflow.permissionhandler.R$dimen: int notification_top_pad
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.baseflow.googleapiavailability.R$id: int line3
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
com.baseflow.googleapiavailability.R$styleable: int ColorStateListItem_android_color
com.baseflow.geolocator.R$styleable: int SplitPairFilter_secondaryActivityAction
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
com.baseflow.permissionhandler.PermissionManager$ActivityRegistry
com.baseflow.geolocator.R$styleable: int SplitPairRule_splitMinSmallestWidth
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
com.baseflow.geolocator.R$layout
com.baseflow.location_permissions.R$id: int info
com.baseflow.googleapiavailability.R$styleable: int ColorStateListItem_android_alpha
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$attr: int fontVariationSettings
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_CODE
androidx.window.layout.FoldingFeature
com.baseflow.permissionhandler.R$dimen: int compat_button_padding_vertical_material
kotlin.jvm.internal.FunctionReference: boolean isInline()
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int GOOGLE_PLAY_SERVICES_AVAILABILITY_UNKNOWN
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
com.baseflow.location_permissions.R$dimen: int notification_action_text_size
com.baseflow.googleapiavailability.R$id: int tag_on_receive_content_mime_types
com.baseflow.geolocator.tasks.TaskContext: com.baseflow.geolocator.data.wrapper.ChannelResponse mChannelResponse
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.window.R$id: int locale
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.baseflow.googleapiavailability.R$styleable: int SplitPairRule_splitMinWidth
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
com.baseflow.googleapiavailability.R$styleable: int FontFamily_fontProviderCerts
com.baseflow.geolocator.tasks.ForwardGeocodingTask$1: android.location.Geocoder val$geocoder
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$string: int common_google_play_services_enable_button
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_icon_dark_normal
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.baseflow.geolocator.data.Coordinate: double latitude
com.baseflow.geolocator.R$attr: int primaryActivityName
com.baseflow.googleapiavailability.R$styleable: int[] LoadingImageView
com.baseflow.permissionhandler.R$attr: int activityName
com.baseflow.geolocator.R$styleable: int LoadingImageView_imageAspectRatio
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
com.baseflow.googleapiavailability.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.baseflow.googleapiavailability.R$id: int normal
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.baseflow.location_permissions.R$dimen: int compat_control_corner_material
androidx.window.layout.ExtensionWindowLayoutInfoBackend
com.baseflow.geolocator.R$styleable: int[] GradientColor
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: com.google.android.gms.location.FusedLocationProviderClient access$400(com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask)
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.baseflow.permissionhandler.PermissionConstants: int SERVICE_STATUS_NOT_APPLICABLE
com.baseflow.permissionhandler.R$integer: R$integer()
androidx.window.R$attr: int activityName
com.baseflow.permissionhandler.MethodCallHandlerImpl: void setActivityRegistry(com.baseflow.permissionhandler.PermissionManager$ActivityRegistry)
androidx.window.core.Version: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.baseflow.location_permissions.R$layout: int notification_action
com.baseflow.geolocator.tasks.LocationUsingLocationManagerTask: long TWO_MINUTES
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: void onStatusChanged(java.lang.String,int,android.os.Bundle)
androidx.window.embedding.SplitRule$Api30Impl
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
com.baseflow.permissionhandler.R$styleable: int[] FontFamilyFont
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.baseflow.geolocator.R$integer: int google_play_services_version
com.baseflow.geolocator.OnCompletionListener
com.baseflow.location_permissions.R$drawable: R$drawable()
com.baseflow.googleapiavailability.R$drawable: int notification_bg
com.baseflow.permissionhandler.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.baseflow.googleapiavailability.R$id: int icon_only
kotlinx.coroutines.JobImpl
androidx.window.core.Bounds: boolean isZero()
com.baseflow.googleapiavailability.R$drawable: int notification_bg_normal
com.baseflow.googleapiavailability.R$styleable: int[] ActivityRule
com.baseflow.googleapiavailability.R$styleable: int ActivityRule_alwaysExpand
com.baseflow.geolocator.data.AddressMapper: java.util.Map toHashMap(android.location.Address)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: int GEOLOCATION_ACCURACY_LOW
com.baseflow.googleapiavailability.R$drawable: int common_full_open_on_phone
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_icon_light_normal_background
kotlinx.coroutines.JobSupport$ChildCompletion
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.baseflow.location_permissions.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.baseflow.permissionhandler.R$id: R$id()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.flutter.view.FlutterCallbackInformation
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_15
com.baseflow.permissionhandler.R$attr: int secondaryActivityAction
com.baseflow.googleapiavailability.R$integer: int status_bar_notification_info_maxnum
com.baseflow.geolocator.R$styleable: int ColorStateListItem_android_color
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_9
kotlinx.coroutines.channels.RendezvousChannel
androidx.window.embedding.EmptyEmbeddingComponent
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.baseflow.location_permissions.R$styleable: int GradientColorItem_android_color
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_STATUS_UNKNOWN
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
com.baseflow.location_permissions.R$id: int notification_main_column
com.baseflow.location_permissions.R
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.baseflow.permissionhandler.PermissionConstants$ServiceStatus
com.baseflow.permissionhandler.R$styleable: int FontFamily_fontProviderCerts
com.baseflow.location_permissions.R$layout: int notification_template_part_chronometer
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.baseflow.googleapiavailability.R$dimen: int notification_action_text_size
com.baseflow.permissionhandler.R$id: int androidx_window_activity_scope
com.baseflow.googleapiavailability.R
com.baseflow.googleapiavailability.R$id: int tag_accessibility_clickable_spans
com.baseflow.location_permissions.R$id: int tag_state_description
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
com.baseflow.geolocator.OnCompletionListener: void onCompletion(java.util.UUID)
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
com.baseflow.geolocator.R$attr: int finishSecondaryWithPrimary
com.baseflow.geolocator.tasks.TaskContext
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
com.google.android.gms.internal.location.zzm: android.os.Parcelable$Creator CREATOR
com.baseflow.googleapiavailability.R$styleable: int FontFamily_fontProviderFetchStrategy
com.baseflow.geolocator.R$attr: int fontProviderAuthority
com.google.android.gms.common.util.DynamiteApi
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.baseflow.location_permissions.R$attr: int queryPatterns
com.baseflow.googleapiavailability.R$dimen: int notification_small_icon_background_padding
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
kotlinx.coroutines.CancelledContinuation: int _resumed
com.baseflow.googleapiavailability.R$dimen
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_5
com.baseflow.location_permissions.R$styleable: int ColorStateListItem_alpha
com.baseflow.googleapiavailability.R$id: int right_icon
com.google.android.gms.location.LocationCallback: void onLocationResult(com.google.android.gms.location.LocationResult)
com.baseflow.permissionhandler.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.baseflow.permissionhandler.PermissionUtils: int toPermissionStatus(android.app.Activity,int,int)
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.baseflow.permissionhandler.R$dimen: int notification_media_narrow_margin
com.baseflow.permissionhandler.R$id: int blocking
com.baseflow.location_permissions.R$id: int accessibility_custom_action_8
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_android_font
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.baseflow.location_permissions.R$dimen: int notification_right_icon_size
com.baseflow.location_permissions.R$dimen: int compat_button_padding_vertical_material
com.baseflow.permissionhandler.R$styleable: int Capability_queryPatterns
com.baseflow.geolocator.data.LocationOptions
com.baseflow.permissionhandler.R$attr: int fontProviderCerts
androidx.window.layout.WindowInfoTrackerImpl
androidx.window.core.Bounds: int getHeight()
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.tasks.Task mStreamLocationTask
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.baseflow.geolocator.R$string: int common_google_play_services_notification_ticker
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_text_light_normal_background
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask$2
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
com.baseflow.googleapiavailability.R$drawable: int googleg_standard_color_18
com.baseflow.geolocator.tasks.ForwardGeocodingTask$1: void run()
com.baseflow.permissionhandler.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_2
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
com.baseflow.geolocator.R$id: int forever
androidx.window.layout.SidecarWindowBackend
com.baseflow.geolocator.R$attr: int clearTop
com.baseflow.location_permissions.R$id: int accessibility_custom_action_10
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_endX
io.flutter.plugin.platform.PlatformOverlayView
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.baseflow.geolocator.tasks.ReverseGeocodingTask$1
com.baseflow.googleapiavailability.R$attr: int shortcutMatchRequired
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.baseflow.geolocator.data.PositionMapper: PositionMapper()
com.baseflow.location_permissions.R$id: int accessibility_custom_action_3
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
com.baseflow.geolocator.R$styleable: int FontFamilyFont_android_fontStyle
com.baseflow.location_permissions.R$dimen: int compat_button_inset_horizontal_material
com.baseflow.location_permissions.R$attr: int fontProviderQuery
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
com.baseflow.geolocator.R$styleable: R$styleable()
com.baseflow.geolocator.data.Coordinate: void setLongitude(double)
com.baseflow.geolocator.data.LocationOptions: long getDistanceFilter()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.baseflow.googleapiavailability.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.baseflow.geolocator.R$drawable: int common_full_open_on_phone
com.baseflow.location_permissions.R$id: int icon_group
com.baseflow.googleapiavailability.R$integer: int google_play_services_version
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.baseflow.googleapiavailability.R$styleable: int GradientColorItem_android_color
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.window.R$attr: int placeholderActivityName
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.baseflow.permissionhandler.R$layout: R$layout()
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_30
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.android.gms.signin.internal.zam: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
com.baseflow.location_permissions.R$attr: int alwaysExpand
com.baseflow.googleapiavailability.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.baseflow.googleapiavailability.R$id
com.baseflow.geolocator.R$id: int blocking
com.baseflow.permissionhandler.R$layout: int notification_action_tombstone
com.baseflow.permissionhandler.R$id: int chronometer
com.baseflow.googleapiavailability.R$styleable: int FontFamily_fontProviderPackage
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_14
com.baseflow.permissionhandler.R$id: int async
com.baseflow.permissionhandler.PermissionHandlerPlugin: void onDetachedFromActivity()
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
androidx.window.R: R()
com.baseflow.geolocator.R$attr: R$attr()
com.baseflow.permissionhandler.R$id: int rtl
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
kotlinx.coroutines.CompletedExceptionally
kotlinx.coroutines.scheduling.CoroutineScheduler
com.baseflow.permissionhandler.R$id: int forever
com.baseflow.geolocator.R$styleable: int ColorStateListItem_android_alpha
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
com.baseflow.googleapiavailability.R$attr: int fontVariationSettings
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
androidx.versionedparcelable.ParcelImpl
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_dark_focused
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.baseflow.location_permissions.R$styleable: int ActivityRule_alwaysExpand
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_icon_dark_normal_background
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: void stopTask()
androidx.lifecycle.SingleGeneratedAdapterObserver
com.baseflow.geolocator.R$dimen: int notification_big_circle_margin
com.baseflow.permissionhandler.AppSettingsManager: boolean openAppSettings(android.content.Context)
com.baseflow.googleapiavailability.R$id: int text2
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
com.baseflow.permissionhandler.R$drawable: int notification_bg
com.baseflow.location_permissions.LocationPermissionsPlugin: void register(com.baseflow.location_permissions.LocationPermissionsPlugin,io.flutter.plugin.common.BinaryMessenger)
com.baseflow.permissionhandler.PermissionManager$ActivityRegistry: void addListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
androidx.window.layout.HardwareFoldingFeature
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: boolean mStopAfterFirstLocationUpdate
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.geolocator.tasks.ForwardGeocodingTask
com.baseflow.location_permissions.R$layout: int custom_dialog
com.baseflow.permissionhandler.PermissionConstants: PermissionConstants()
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_STATUS_NEWER_ASK_AGAIN
com.baseflow.geolocator.R$layout: R$layout()
androidx.window.layout.EmptyDecorator: EmptyDecorator()
com.baseflow.geolocator.R$attr: int splitMinSmallestWidth
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_centerY
com.baseflow.geolocator.R$drawable: int notification_bg
com.baseflow.geolocator.data.wrapper.MethodResponse: MethodResponse(io.flutter.plugin.common.MethodChannel$Result)
com.baseflow.geolocator.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.baseflow.googleapiavailability.R$styleable: int[] FontFamilyFont
com.baseflow.googleapiavailability.R$styleable: int SplitPairFilter_secondaryActivityName
com.baseflow.googleapiavailability.R$styleable: int FontFamily_fontProviderQuery
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: java.lang.String mActiveProvider
com.baseflow.permissionhandler.R$attr: int splitLayoutDirection
androidx.window.embedding.ActivityStack: java.lang.String toString()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.baseflow.geolocator.R$styleable: int SplitPairRule_splitLayoutDirection
com.baseflow.geolocator.R$string: int common_google_play_services_wear_update_text
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView
com.baseflow.geolocator.R$string: int common_google_play_services_update_text
com.baseflow.googleapiavailability.R$string: int common_google_play_services_install_title
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int REQUEST_GOOGLE_PLAY_SERVICES
com.baseflow.location_permissions.LocationPermissionsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
com.baseflow.location_permissions.R$attr: R$attr()
com.baseflow.permissionhandler.R$color: int notification_action_color_filter
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
com.baseflow.location_permissions.R$styleable: int SplitPlaceholderRule_splitMinWidth
com.baseflow.location_permissions.LocationPermissionsPlugin: void handlePermissionsRequest(java.lang.String[],int[])
androidx.lifecycle.FullLifecycleObserverAdapter
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.baseflow.permissionhandler.PermissionManager$ActivityResultListener
com.baseflow.permissionhandler.R$style: int TextAppearance_Compat_Notification_Info
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
com.baseflow.location_permissions.R$styleable: int FontFamily_fontProviderAuthority
com.baseflow.googleapiavailability.R$id: int forever
com.baseflow.googleapiavailability.R: R()
com.baseflow.location_permissions.R$id: int accessibility_custom_action_20
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_text_dark_focused
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
com.baseflow.geolocator.tasks.Task: Task(com.baseflow.geolocator.tasks.TaskContext)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.baseflow.location_permissions.R$attr: int finishPrimaryWithSecondary
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_dark_pressed
androidx.window.embedding.SplitInfo: float getSplitRatio()
com.baseflow.geolocator.utils.MainThreadDispatcher: void dispatchError(com.baseflow.geolocator.data.wrapper.ChannelResponse,java.lang.String,java.lang.String,java.lang.Object)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
com.baseflow.location_permissions.R$id: int locale
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
com.baseflow.geolocator.tasks.ForwardGeocodingTask$1: ForwardGeocodingTask$1(com.baseflow.geolocator.tasks.ForwardGeocodingTask,android.location.Geocoder,com.baseflow.geolocator.data.ForwardGeocodingOptions,com.baseflow.geolocator.data.wrapper.ChannelResponse)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.baseflow.googleapiavailability.R$styleable: int SplitPairFilter_secondaryActivityAction
com.baseflow.geolocator.R$styleable: int[] FontFamily
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_tileMode
com.baseflow.googleapiavailability.R$color: int androidx_core_ripple_material_light
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_24
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
com.baseflow.geolocator.R$styleable: int GradientColor_android_startY
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_android_fontWeight
androidx.window.layout.WindowInfoTracker$Companion
com.baseflow.googleapiavailability.R$styleable: int Capability_shortcutMatchRequired
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.permissionhandler.ServiceManager: boolean isLocationServiceEnabled(android.content.Context)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: com.google.android.gms.location.LocationRequest access$200(com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask)
com.baseflow.googleapiavailability.R$id: int right_side
com.baseflow.location_permissions.R$id: int accessibility_custom_action_4
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.baseflow.location_permissions.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
com.baseflow.permissionhandler.R$dimen: int notification_top_pad_large_text
com.baseflow.permissionhandler.R$style: int Widget_Compat_NotificationActionText
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.baseflow.googleapiavailability.R$dimen: int notification_main_column_padding_top
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.baseflow.geolocator.data.CalculateDistanceOptions: com.baseflow.geolocator.data.Coordinate mDestinationCoordinates
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
com.baseflow.permissionhandler.PermissionManager$RequestPermissionsListener: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.baseflow.location_permissions.R$dimen: int notification_top_pad
com.baseflow.geolocator.R$id: int accessibility_custom_action_7
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
kotlin.jvm.internal.CallableReference: java.lang.String name
com.baseflow.geolocator.BuildConfig
com.baseflow.googleapiavailability.R$dimen: int notification_media_narrow_margin
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.internal.LockFreeLinkedListNode
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.window.layout.SidecarCompat$TranslatingCallback
com.baseflow.permissionhandler.PermissionManager$PermissionRegistry: void addListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
com.baseflow.permissionhandler.R$style: int TextAppearance_Compat_Notification
com.baseflow.location_permissions.R$id: int accessibility_custom_action_31
kotlinx.coroutines.DefaultExecutor
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.DispatchedCoroutine
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_text_light
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.baseflow.permissionhandler.PermissionManager: boolean shouldShowRequestPermissionRationale(int,android.app.Activity)
com.baseflow.googleapiavailability.R$id: int text
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
com.baseflow.location_permissions.LocationPermissionsPlugin: int PERMISSION_LEVEL_WHEN_IN_USE
com.baseflow.geolocator.data.ForwardGeocodingOptions: com.baseflow.geolocator.data.ForwardGeocodingOptions parseArguments(java.lang.Object)
com.baseflow.geolocator.R$styleable: int GradientColor_android_centerY
com.baseflow.geolocator.R$styleable: int SignInButton_scopeUris
com.baseflow.permissionhandler.MethodCallHandlerImpl: com.baseflow.permissionhandler.PermissionManager$PermissionRegistry permissionRegistry
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_fontWeight
com.baseflow.location_permissions.R$id: int action_divider
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.baseflow.permissionhandler.R$id: int tag_window_insets_animation_callback
io.flutter.plugin.platform.SingleViewPresentation
com.baseflow.location_permissions.R$id: int action_text
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.baseflow.permissionhandler.ServiceManager: ServiceManager()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
io.flutter.embedding.android.FlutterView
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_dark
com.baseflow.geolocator.tasks.LocationUsingLocationServicesTask
com.baseflow.geolocator.R$string: int common_google_play_services_update_button
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
com.baseflow.permissionhandler.MethodCallHandlerImpl
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_31
com.baseflow.googleapiavailability.R$styleable: int[] SplitPairRule
com.baseflow.permissionhandler.MethodCallHandlerImpl: void setActivity(android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl$Companion
com.baseflow.geolocator.tasks.ReverseGeocodingTask$1: ReverseGeocodingTask$1(com.baseflow.geolocator.tasks.ReverseGeocodingTask,android.location.Geocoder,com.baseflow.geolocator.data.wrapper.ChannelResponse)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_dark_default
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.baseflow.geolocator.R$id: int accessibility_custom_action_15
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_26
com.baseflow.googleapiavailability.R$dimen: int compat_button_inset_vertical_material
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_31
com.baseflow.permissionhandler.R$styleable: int FontFamily_fontProviderAuthority
com.baseflow.geolocator.R$id: int tag_on_receive_content_listener
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
kotlin.jvm.internal.CallableReference: boolean isSuspend()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int GOOGLE_PLAY_SERVICES_AVAILABILITY_NOT_AVAILABLE_ON_PLATFORM
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
android.support.v4.graphics.drawable.IconCompatParcelizer
com.baseflow.geolocator.R$id: int chronometer
com.baseflow.location_permissions.R$attr: int secondaryActivityAction
com.baseflow.geolocator.R$styleable: int FontFamilyFont_fontStyle
androidx.window.core.Version: int hashCode()
com.baseflow.permissionhandler.R$styleable: int[] SplitPairRule
com.baseflow.location_permissions.BuildConfig: java.lang.String BUILD_TYPE
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_endY
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
com.baseflow.geolocator.R$id: int tag_accessibility_actions
com.baseflow.permissionhandler.R$layout: int notification_template_custom_big
com.baseflow.geolocator.utils.MainThreadDispatcher: void dispatchSuccess(com.baseflow.geolocator.data.wrapper.ChannelResponse,java.lang.Object)
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.baseflow.geolocator.tasks.TaskContext: TaskContext(android.content.Context,com.baseflow.geolocator.data.wrapper.ChannelResponse,java.lang.Object,com.baseflow.geolocator.OnCompletionListener)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
com.baseflow.permissionhandler.R$styleable: int SplitPairRule_clearTop
kotlinx.coroutines.InvokeOnCancelling
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.baseflow.geolocator.data.ForwardGeocodingOptions: ForwardGeocodingOptions(java.lang.String,java.util.Locale)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.baseflow.geolocator.tasks.ReverseGeocodingTask: com.baseflow.geolocator.data.Coordinate mCoordinatesToLookup
com.baseflow.geolocator.R$id: int accessibility_custom_action_3
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
com.baseflow.googleapiavailability.R$id: int action_text
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.baseflow.location_permissions.LocationPermissionsPlugin: int PERMISSION_STATUS_DENIED
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.baseflow.location_permissions.LocationPermissionsPlugin: java.util.List getManifestNames(android.content.Context)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.window.R$attr: int alwaysExpand
com.baseflow.geolocator.R$color: int common_google_signin_btn_tint
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
androidx.window.layout.DisplayFeature
com.baseflow.googleapiavailability.BuildConfig: boolean DEBUG
androidx.window.layout.ActivityCompatHelperApi24
com.baseflow.location_permissions.R$dimen: int notification_large_icon_width
kotlinx.coroutines.channels.AbstractChannel
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
com.baseflow.geolocator.utils.MainThreadDispatcher: android.os.Handler handler
com.baseflow.location_permissions.R$id: int action_image
androidx.fragment.app.Fragment$2
androidx.window.R$styleable: int[] ActivityRule
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
kotlin.jvm.internal.CallableReference: CallableReference()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.baseflow.permissionhandler.R$id: int right_side
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
com.baseflow.googleapiavailability.R$integer: R$integer()
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$attr
com.baseflow.permissionhandler.R$attr: int fontProviderAuthority
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.baseflow.googleapiavailability.R$dimen: int compat_button_padding_horizontal_material
com.baseflow.googleapiavailability.R$attr: int imageAspectRatioAdjust
com.baseflow.location_permissions.R$id: int accessibility_custom_action_14
androidx.window.embedding.SplitInfo: java.lang.String toString()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.baseflow.location_permissions.LocationPermissionsPlugin$PermissionLevel
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin$1: GoogleApiAvailabilityPlugin$1(com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin)
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.baseflow.geolocator.tasks.ForwardGeocodingTask$1: com.baseflow.geolocator.data.wrapper.ChannelResponse val$channelResponse
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.baseflow.permissionhandler.R$attr
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.baseflow.geolocator.data.AddressMapper
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: java.lang.String getBestProvider(android.location.LocationManager,int)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: android.location.Location mBestLocation
com.baseflow.geolocator.R$styleable: int GradientColor_android_endY
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
androidx.window.embedding.ExtensionEmbeddingBackend
com.baseflow.geolocator.R$string: int common_signin_button_text_long
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
com.baseflow.googleapiavailability.R$styleable: int ColorStateListItem_alpha
com.baseflow.location_permissions.R$drawable: int notification_bg_normal_pressed
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
com.baseflow.googleapiavailability.R$style: R$style()
com.baseflow.googleapiavailability.BuildConfig: BuildConfig()
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.baseflow.googleapiavailability.R$id: int light
com.baseflow.location_permissions.LocationPermissionsPlugin: int SERVICE_STATUS_DISABLED
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_text_light
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
com.baseflow.permissionhandler.PermissionManager$RequestPermissionsListener: boolean alreadyCalled
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.baseflow.geolocator.tasks.ReverseGeocodingTask: android.content.Context mAndroidContext
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
com.baseflow.permissionhandler.R$dimen: int notification_small_icon_background_padding
kotlinx.coroutines.internal.ThreadSafeHeap
com.baseflow.location_permissions.R$styleable: int[] SplitPairRule
com.baseflow.location_permissions.R$styleable: int GradientColor_android_centerX
androidx.window.embedding.SplitRule: int minWidth
com.baseflow.permissionhandler.R$styleable: int SplitPairRule_splitLayoutDirection
com.baseflow.googleapiavailability.R$attr: int primaryActivityName
com.baseflow.googleapiavailability.R$style: int TextAppearance_Compat_Notification_Title
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.baseflow.geolocator.R$dimen: int notification_subtext_size
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.baseflow.geolocator.R$id: int tag_window_insets_animation_callback
com.baseflow.permissionhandler.R$dimen: int notification_content_margin_start
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin$1
com.baseflow.geolocator.R$drawable: int notification_action_background
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: void startTask()
com.baseflow.geolocator.R$id: int ltr
com.baseflow.location_permissions.R$id: int line3
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
com.baseflow.permissionhandler.R$id: int text2
com.baseflow.permissionhandler.PermissionConstants: int SERVICE_STATUS_DISABLED
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_type
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
com.baseflow.permissionhandler.R$color
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
com.baseflow.geolocator.R$attr: int secondaryActivityAction
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.permissionhandler.R$style: int TextAppearance_Compat_Notification_Time
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
com.baseflow.geolocator.tasks.ReverseGeocodingTask$1: com.baseflow.geolocator.tasks.ReverseGeocodingTask this$0
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_13
com.baseflow.geolocator.R$style: int Widget_Compat_NotificationActionContainer
androidx.window.embedding.SplitInfo: float splitRatio
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.baseflow.permissionhandler.R$attr: int fontWeight
com.baseflow.location_permissions.R$layout: int notification_template_part_time
androidx.window.core.Bounds: java.lang.String toString()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
kotlinx.coroutines.internal.AtomicOp
com.baseflow.geolocator.data.wrapper.EventResponse: void success(java.lang.Object)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.baseflow.location_permissions.LocationPermissionsPlugin: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.baseflow.location_permissions.R$dimen: int notification_media_narrow_margin
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.baseflow.permissionhandler.PermissionHandlerPlugin: io.flutter.plugin.common.MethodChannel methodChannel
com.baseflow.geolocator.GeolocatorPlugin: android.content.Context mContext
com.baseflow.googleapiavailability.R$id: int async
com.baseflow.geolocator.R$id: int accessibility_custom_action_12
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_text_disabled
com.baseflow.permissionhandler.PermissionHandlerPlugin: void stopListening()
com.baseflow.permissionhandler.PermissionUtils: void updatePermissionShouldShowStatus(android.app.Activity,int)
com.baseflow.geolocator.R$color: int notification_action_color_filter
com.baseflow.permissionhandler.R$dimen: int compat_control_corner_material
com.baseflow.geolocator.R$drawable: int notification_tile_bg
com.baseflow.geolocator.R$attr: int imageAspectRatioAdjust
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
com.baseflow.location_permissions.LocationPermissionsPlugin: java.util.List getNamesForLevel(android.content.Context,int)
com.baseflow.googleapiavailability.R$id: int tag_transition_group
com.baseflow.geolocator.R$string: int common_google_play_services_install_button
com.baseflow.geolocator.R$styleable: int FontFamilyFont_fontWeight
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
com.baseflow.location_permissions.R$id: R$id()
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.baseflow.googleapiavailability.R$styleable: int[] GradientColorItem
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_fontStyle
com.baseflow.permissionhandler.PermissionManager$ActivityResultListener: PermissionManager$ActivityResultListener(com.baseflow.permissionhandler.PermissionManager$ResultCallback)
com.baseflow.googleapiavailability.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.baseflow.permissionhandler.R$id: int icon
com.baseflow.geolocator.R$id: int accessibility_custom_action_18
androidx.window.R$attr: int splitMinSmallestWidth
com.baseflow.location_permissions.R$id: int title
androidx.window.embedding.ActivityRule
com.baseflow.location_permissions.LocationPermissionsPlugin: io.flutter.plugin.common.MethodChannel$Result mResult
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.baseflow.permissionhandler.R$layout: int notification_template_part_chronometer
kotlinx.coroutines.CancelledContinuation
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_ttcIndex
com.baseflow.googleapiavailability.R$styleable: int FontFamily_fontProviderFetchTimeout
com.baseflow.geolocator.utils.MainThreadDispatcher$1: com.baseflow.geolocator.data.wrapper.ChannelResponse val$channelResponse
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_icon_dark_normal_background
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_STORAGE
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
com.baseflow.permissionhandler.PermissionConstants
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.baseflow.geolocator.R$styleable: int[] SplitPairFilter
com.baseflow.googleapiavailability.R$string: int common_google_play_services_install_button
com.baseflow.location_permissions.R$id: int accessibility_custom_action_17
com.baseflow.permissionhandler.R$id: int tag_on_receive_content_listener
com.baseflow.location_permissions.R$styleable: int SplitPairRule_splitLayoutDirection
com.baseflow.geolocator.R$dimen: int compat_notification_large_icon_max_height
androidx.window.embedding.EmbeddingRule
com.google.android.gms.internal.location.zzad: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$id: int accessibility_custom_action_11
com.baseflow.googleapiavailability.R$id: int actions
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
com.baseflow.permissionhandler.R$layout: int custom_dialog
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_dark_focused
com.baseflow.location_permissions.LocationPermissionsPlugin: void onDetachedFromActivityForConfigChanges()
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
androidx.window.core.Version: boolean equals(java.lang.Object)
com.baseflow.location_permissions.R$id: int tag_window_insets_animation_callback
com.baseflow.location_permissions.R$drawable: int notification_bg
com.baseflow.geolocator.R$id: int notification_main_column_container
com.baseflow.geolocator.R$id: int accessibility_custom_action_28
com.baseflow.permissionhandler.PermissionManager: PermissionManager()
com.baseflow.permissionhandler.R$id: int tag_on_receive_content_mime_types
com.baseflow.location_permissions.R$integer
com.baseflow.geolocator.R$dimen: int compat_button_inset_vertical_material
com.baseflow.permissionhandler.R$integer
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.baseflow.geolocator.R$id: int accessibility_custom_action_31
com.baseflow.googleapiavailability.R$styleable: int SignInButton_scopeUris
com.baseflow.googleapiavailability.R$styleable: int[] ColorStateListItem
com.baseflow.permissionhandler.BuildConfig
com.google.android.gms.common.internal.ResolveAccountRequest: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
com.baseflow.geolocator.GeolocatorPlugin: void registerPlugin(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
com.baseflow.location_permissions.LocationPermissionsPlugin$LocationServiceBroadcastReceiver: LocationPermissionsPlugin$LocationServiceBroadcastReceiver(com.baseflow.location_permissions.LocationPermissionsPlugin,com.baseflow.location_permissions.LocationPermissionsPlugin$1)
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_light
com.baseflow.geolocator.GeolocatorPlugin: java.util.Map mTasks
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_10
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.geolocator.R$id: int accessibility_custom_action_2
com.baseflow.location_permissions.R$dimen: int notification_content_margin_start
com.baseflow.permissionhandler.R$dimen
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.baseflow.geolocator.R$style: int Widget_Compat_NotificationActionText
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
com.baseflow.googleapiavailability.MethodCallHandlerImpl: MethodCallHandlerImpl(android.content.Context)
com.baseflow.location_permissions.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.core.Bounds: int left
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
com.baseflow.permissionhandler.PermissionManager$ActivityResultListener: com.baseflow.permissionhandler.PermissionManager$ResultCallback callback
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.baseflow.geolocator.GeolocatorPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
androidx.window.layout.WindowMetricsCalculator
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_android_ttcIndex
com.baseflow.googleapiavailability.R$id: int dialog_button
com.baseflow.location_permissions.R$dimen: int compat_button_inset_vertical_material
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
com.baseflow.geolocator.R$id: int standard
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
androidx.window.core.Version$Companion
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
com.baseflow.googleapiavailability.MethodCallHandlerImpl: android.app.Activity activity
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.baseflow.geolocator.R$styleable: int FontFamilyFont_ttcIndex
com.baseflow.location_permissions.R$layout: int notification_template_custom_big
com.google.android.gms.signin.internal.zab: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$id: int action_text
com.baseflow.geolocator.R$layout: int notification_template_part_time
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void registerPlugin(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
com.baseflow.googleapiavailability.R$attr
com.baseflow.location_permissions.R$attr: int fontProviderFetchTimeout
androidx.window.embedding.SplitController: boolean sDebug
com.baseflow.geolocator.R$styleable: int GradientColorItem_android_color
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
com.baseflow.geolocator.data.ReverseGeocodingOptions
androidx.window.layout.SidecarCompat: java.lang.String TAG
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.baseflow.geolocator.R$id: int icon_group
com.baseflow.location_permissions.R$styleable: int[] FontFamily
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: com.google.android.gms.location.LocationCallback access$300(com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask)
com.baseflow.googleapiavailability.R$string: int status_bar_notification_info_overflow
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
com.baseflow.geolocator.data.wrapper.ChannelResponse: void success(java.lang.Object)
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_fontStyle
com.baseflow.geolocator.data.Result: void success(java.lang.Object)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
androidx.window.core.Bounds: int bottom
kotlinx.coroutines.android.AndroidDispatcherFactory
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
com.baseflow.location_permissions.R$styleable: int GradientColor_android_endColor
com.baseflow.location_permissions.R$style: int TextAppearance_Compat_Notification_Info
com.baseflow.location_permissions.R$drawable: int notification_bg_low_pressed
com.baseflow.geolocator.R$string: int common_google_play_services_updating_text
com.google.android.gms.maps.model.LatLng: android.os.Parcelable$Creator CREATOR
com.baseflow.location_permissions.LocationPermissionsPlugin: int PERMISSION_STATUS_RESTRICTED
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
com.baseflow.permissionhandler.R$id: int line1
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.baseflow.location_permissions.R$color: int androidx_core_secondary_text_default_material_light
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int GOOGLE_PLAY_SERVICES_AVAILABILITY_SERVICE_VERSION_UPDATE_REQUIRED
com.baseflow.permissionhandler.R$styleable: int[] ActivityFilter
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.baseflow.googleapiavailability.R$color: int notification_icon_bg_color
com.baseflow.geolocator.data.wrapper.EventResponse: void error(java.lang.String,java.lang.String,java.lang.Object)
com.baseflow.geolocator.R$id: int accessibility_custom_action_20
com.baseflow.geolocator.data.Coordinate: void setLatitude(double)
com.baseflow.geolocator.tasks.LocationUsingLocationServicesTask: LocationUsingLocationServicesTask(com.baseflow.geolocator.tasks.TaskContext)
com.baseflow.geolocator.R$drawable: int notify_panel_notification_icon_bg
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
com.baseflow.location_permissions.R$id: int accessibility_custom_action_19
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_fontVariationSettings
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_icon_light_normal
com.baseflow.permissionhandler.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.baseflow.permissionhandler.R$attr: int ttcIndex
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.baseflow.location_permissions.R$id: int accessibility_action_clickable_span
com.baseflow.googleapiavailability.R$attr: int fontWeight
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.baseflow.location_permissions.R$styleable: int GradientColor_android_startX
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
com.baseflow.googleapiavailability.R$attr: int fontProviderSystemFontFamily
com.baseflow.location_permissions.R$styleable: int ColorStateListItem_android_alpha
com.baseflow.geolocator.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.baseflow.geolocator.data.Coordinate: double getLongitude()
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask$2
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.baseflow.geolocator.R$styleable: int FontFamily_fontProviderPackage
androidx.window.embedding.SplitRule: int minSmallestWidth
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask$1: void onLocationResult(com.google.android.gms.location.LocationResult)
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_REMINDERS
com.baseflow.googleapiavailability.R$styleable: int[] ActivityFilter
com.baseflow.geolocator.R$drawable: int googleg_disabled_color_18
com.baseflow.location_permissions.R$id: int accessibility_custom_action_29
com.baseflow.location_permissions.R$id: int tag_unhandled_key_event_manager
com.baseflow.location_permissions.R$styleable: int GradientColor_android_tileMode
com.baseflow.location_permissions.R$drawable: int notification_bg_low_normal
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.Parcelable$Creator CREATOR
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.baseflow.permissionhandler.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.baseflow.googleapiavailability.R$dimen: int compat_notification_large_icon_max_height
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityRule: int hashCode()
com.baseflow.location_permissions.R$id: int accessibility_custom_action_0
com.baseflow.googleapiavailability.R$drawable: int notification_bg_low
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_dark_disabled
kotlinx.coroutines.android.HandlerContext
androidx.window.embedding.ActivityStack: int hashCode()
com.baseflow.location_permissions.R$styleable: int FontFamily_fontProviderQuery
androidx.window.layout.FoldingFeature$OcclusionType
com.baseflow.location_permissions.R$id: int chronometer
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
android.support.v4.app.RemoteActionCompatParcelizer
com.baseflow.geolocator.R$styleable: int FontFamilyFont_android_ttcIndex
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.baseflow.location_permissions.LocationPermissionsPlugin: int PERMISSION_LEVEL_ALWAYS
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: LocationUpdatesUsingLocationManagerTask(com.baseflow.geolocator.tasks.TaskContext,boolean)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.baseflow.location_permissions.R$styleable: int FontFamily_fontProviderFetchStrategy
com.baseflow.location_permissions.R$dimen: R$dimen()
com.baseflow.geolocator.R$styleable: int GradientColor_android_startX
androidx.window.java.R: R()
com.baseflow.location_permissions.R$id: int dialog_button
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask$1: com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask this$0
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.window.layout.SidecarAdapter$Companion
androidx.window.R$attr
com.baseflow.location_permissions.R$attr: int activityAction
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.baseflow.location_permissions.R$drawable: int notification_bg_normal
com.baseflow.geolocator.tasks.CalculateDistanceTask: void startTask()
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask$1: void onFailure(java.lang.Exception)
com.baseflow.location_permissions.LocationPermissionsPlugin: int PERMISSION_CODE
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.baseflow.permissionhandler.PermissionHandlerPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.layout.SidecarCompat$DistinctElementCallback
com.baseflow.geolocator.R$id: int action_container
com.baseflow.geolocator.tasks.Task
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.baseflow.geolocator.R$drawable: int notification_bg_low_pressed
com.baseflow.permissionhandler.R$dimen: int notification_subtext_size
com.baseflow.geolocator.R$integer: R$integer()
com.baseflow.geolocator.R$attr: int placeholderActivityName
com.baseflow.geolocator.data.wrapper.ChannelResponse: ChannelResponse()
com.baseflow.permissionhandler.R$attr: int nestedScrollViewStyle
com.baseflow.location_permissions.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int GOOGLE_PLAY_SERVICES_AVAILABILITY_SERVICE_UPDATING
com.google.android.gms.internal.location.zzbd: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_icon_light
com.baseflow.location_permissions.R$id: int tag_on_apply_window_listener
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.baseflow.location_permissions.LocationPermissionsPlugin$1: LocationPermissionsPlugin$1(com.baseflow.location_permissions.LocationPermissionsPlugin)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.baseflow.geolocator.utils.MainThreadDispatcher$1: java.lang.String val$channelName
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask
com.baseflow.permissionhandler.R$id: int action_divider
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_type
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.baseflow.geolocator.R$id: int right_icon
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.baseflow.geolocator.R$id: int tag_accessibility_heading
com.baseflow.geolocator.R$layout: int notification_template_part_chronometer
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.baseflow.googleapiavailability.R$attr: int activityAction
com.baseflow.googleapiavailability.R$attr: int alpha
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void onDetachedFromActivity()
com.baseflow.googleapiavailability.R$id: int icon
com.baseflow.geolocator.tasks.CalculateDistanceTask
com.baseflow.geolocator.data.Coordinate: double getLatitude()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.baseflow.geolocator.tasks.TaskFactory: com.baseflow.geolocator.tasks.Task createReverseGeocodingTask(android.content.Context,io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.baseflow.geolocator.OnCompletionListener)
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
com.baseflow.location_permissions.LocationPermissionsPlugin: int checkServiceStatus(android.content.Context)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
com.baseflow.geolocator.tasks.ForwardGeocodingTask$1: com.baseflow.geolocator.tasks.ForwardGeocodingTask this$0
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int GOOGLE_PLAY_SERVICES_AVAILABILITY_SERVICE_INVALID
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_dark_disabled
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.baseflow.googleapiavailability.R$id: int blocking
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.baseflow.location_permissions.R$attr: int shortcutMatchRequired
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_android_fontVariationSettings
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
com.baseflow.permissionhandler.R$color: R$color()
com.baseflow.googleapiavailability.R$styleable: int LoadingImageView_imageAspectRatio
com.baseflow.geolocator.R$dimen: int compat_notification_large_icon_max_width
com.baseflow.googleapiavailability.R$id: int action_divider
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_icon_light_focused
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1
com.baseflow.location_permissions.R$drawable: int notification_tile_bg
androidx.activity.ImmLeaksCleaner
com.baseflow.googleapiavailability.R$id: int locale
com.baseflow.geolocator.GeolocatorPlugin: void setContext(android.content.Context)
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_dark
com.baseflow.permissionhandler.R$attr: int splitRatio
com.baseflow.geolocator.R$id: int notification_main_column
com.baseflow.location_permissions.LocationPermissionsPlugin: void requestPermissions(int)
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int GOOGLE_PLAY_SERVICES_AVAILABILITY_SERVICE_DISABLED
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_icon_light
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_15
com.baseflow.googleapiavailability.R$styleable: int[] FontFamily
com.baseflow.permissionhandler.R$id
com.baseflow.permissionhandler.PermissionManager: void requestPermissions(java.util.List,android.app.Activity,com.baseflow.permissionhandler.PermissionManager$ActivityRegistry,com.baseflow.permissionhandler.PermissionManager$PermissionRegistry,com.baseflow.permissionhandler.PermissionManager$ResultCallback,com.baseflow.permissionhandler.PermissionManager$ErrorCallback)
com.baseflow.geolocator.R$styleable: int FontFamily_fontProviderCerts
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
io.flutter.plugins.share.ShareFileProvider: ShareFileProvider()
com.baseflow.location_permissions.R$styleable: int[] ActivityRule
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.baseflow.googleapiavailability.R$string: int common_signin_button_text_long
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_text_disabled
com.baseflow.geolocator.R$id: int wide
com.baseflow.permissionhandler.R$attr: int finishPrimaryWithSecondary
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
com.baseflow.permissionhandler.PermissionManager$ActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_text_dark_focused
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
com.baseflow.geolocator.GeolocatorPlugin: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.baseflow.googleapiavailability.R$attr: int circleCrop
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.window.embedding.SplitRule: SplitRule()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
com.baseflow.location_permissions.R$dimen: int notification_action_icon_size
com.baseflow.location_permissions.R$style: int TextAppearance_Compat_Notification
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
com.baseflow.location_permissions.LocationPermissionsPlugin: android.app.Activity activity
com.baseflow.permissionhandler.R$styleable: int Capability_shortcutMatchRequired
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_centerY
com.baseflow.location_permissions.LocationPermissionsPlugin: boolean openAppSettings(android.content.Context)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.baseflow.geolocator.R$id: int tag_unhandled_key_event_manager
com.baseflow.googleapiavailability.R$id: int action_container
com.baseflow.location_permissions.R$id: int accessibility_custom_action_15
androidx.activity.ComponentActivity$3
com.baseflow.geolocator.tasks.ReverseGeocodingTask$1: android.location.Geocoder val$geocoder
com.baseflow.geolocator.R$styleable: int GradientColor_android_startColor
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_icon_dark
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
com.baseflow.geolocator.data.wrapper.EventResponse
com.baseflow.permissionhandler.R$attr: int splitMinSmallestWidth
kotlin.jvm.internal.CallableReference: boolean isTopLevel
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
com.baseflow.geolocator.R$id: int tag_on_apply_window_listener
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_MEDIA_LIBRARY
com.baseflow.googleapiavailability.R$dimen: int notification_top_pad_large_text
com.baseflow.googleapiavailability.R$color
com.baseflow.location_permissions.LocationPermissionsPlugin: android.content.IntentFilter mIntentFilter
com.baseflow.googleapiavailability.R$attr: int font
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask: void startTask()
com.baseflow.location_permissions.LocationPermissionsPlugin$1: com.baseflow.location_permissions.LocationPermissionsPlugin val$plugin
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_0
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
com.baseflow.location_permissions.R$styleable: int SplitPairRule_splitMinWidth
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_18
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.baseflow.geolocator.tasks.LocationUsingLocationManagerTask: boolean isBetterLocation(android.location.Location,android.location.Location)
com.baseflow.geolocator.R$dimen: int notification_right_icon_size
com.baseflow.geolocator.R$layout: int notification_template_icon_group
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.baseflow.googleapiavailability.R$attr: int activityName
com.baseflow.googleapiavailability.R$attr: int splitRatio
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
kotlinx.coroutines.ChildContinuation
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
com.baseflow.geolocator.R$attr: int font
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin$1: boolean onViewDestroy(io.flutter.view.FlutterNativeView)
com.baseflow.googleapiavailability.R$color: int notification_action_color_filter
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_13
com.baseflow.geolocator.data.wrapper.MethodResponse: io.flutter.plugin.common.MethodChannel$Result mResult
com.baseflow.location_permissions.LocationPermissionsPlugin$1
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.baseflow.location_permissions.LocationPermissionsPlugin: int PERMISSION_STATUS_GRANTED
com.baseflow.geolocator.R$id: int text
com.baseflow.googleapiavailability.R$styleable: int SplitPlaceholderRule_splitRatio
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
com.baseflow.location_permissions.R$id: int accessibility_custom_action_13
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.window.layout.WindowInfoTrackerDecorator
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask$2: void onComplete(com.google.android.gms.tasks.Task)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
com.baseflow.geolocator.R$dimen: int notification_small_icon_size_as_large
com.baseflow.permissionhandler.MethodCallHandlerImpl: MethodCallHandlerImpl(android.content.Context,com.baseflow.permissionhandler.AppSettingsManager,com.baseflow.permissionhandler.PermissionManager,com.baseflow.permissionhandler.ServiceManager)
androidx.window.layout.FoldingFeature$Orientation
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_endColor
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_icon_disabled
com.baseflow.geolocator.R$styleable: int GradientColor_android_tileMode
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.baseflow.geolocator.R$styleable: int SplitPairRule_clearTop
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
com.baseflow.geolocator.R$attr: int circleCrop
com.baseflow.geolocator.R$id: int italic
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.baseflow.location_permissions.R$attr: int nestedScrollViewStyle
com.baseflow.googleapiavailability.R$id: int wide
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.baseflow.geolocator.R$styleable: int GradientColor_android_endColor
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.gms.maps.model.MapStyleOptions: android.os.Parcelable$Creator CREATOR
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_7
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
com.baseflow.googleapiavailability.R$layout: R$layout()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.googleapiavailability.R$attr: int clearTop
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
com.baseflow.geolocator.R$styleable: int Capability_shortcutMatchRequired
com.baseflow.googleapiavailability.R$id: int notification_main_column
com.baseflow.googleapiavailability.R$layout: int notification_action
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.baseflow.permissionhandler.R$id: int tag_unhandled_key_event_manager
androidx.window.core.Bounds: int right
com.baseflow.geolocator.R$styleable: int[] SplitPlaceholderRule
com.google.android.gms.location.zzj: android.os.Parcelable$Creator CREATOR
com.baseflow.googleapiavailability.R$id: int tag_screen_reader_focusable
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
com.baseflow.geolocator.R$string: int common_google_play_services_enable_title
com.baseflow.googleapiavailability.R$dimen: int notification_large_icon_width
com.baseflow.geolocator.R$string: int common_google_play_services_notification_channel_name
com.baseflow.googleapiavailability.MethodCallHandlerImpl
androidx.window.R$attr: int finishPrimaryWithSecondary
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.baseflow.geolocator.tasks.ReverseGeocodingTask: java.util.Locale mLocale
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_11
com.baseflow.geolocator.R$id: int accessibility_custom_action_19
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_1
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.BlockingEventLoop
com.baseflow.location_permissions.R$attr: int fontProviderPackage
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: float accuracyToFloat(int)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: void onProviderEnabled(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.baseflow.googleapiavailability.R$attr: int placeholderActivityName
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.baseflow.location_permissions.R$id: int icon
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
com.baseflow.geolocator.BuildConfig: java.lang.String BUILD_TYPE
com.baseflow.geolocator.BuildConfig: boolean DEBUG
com.baseflow.geolocator.utils.MainThreadDispatcher: void initHandlerIfNull()
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_11
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: com.google.android.gms.location.FusedLocationProviderClient mFusedLocationProviderClient
androidx.window.embedding.ActivityFilter
androidx.lifecycle.Lifecycling$1
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$dimen: int notification_content_margin_start
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
io.flutter.embedding.engine.FlutterOverlaySurface
com.baseflow.permissionhandler.R$drawable: int notification_bg_normal_pressed
com.baseflow.geolocator.R$styleable: int SplitPairRule_splitMinWidth
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.baseflow.location_permissions.R$styleable: int GradientColor_android_type
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.baseflow.geolocator.R$attr: int fontProviderCerts
com.baseflow.location_permissions.R$id: int accessibility_custom_action_18
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.baseflow.permissionhandler.R$styleable: int FontFamily_fontProviderFetchTimeout
com.baseflow.googleapiavailability.R$id: int androidx_window_activity_scope
com.baseflow.googleapiavailability.R$style: int TextAppearance_Compat_Notification_Time
com.baseflow.googleapiavailability.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.window.core.Version: androidx.window.core.Version CURRENT
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.baseflow.permissionhandler.R$attr: int alpha
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_startY
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.baseflow.googleapiavailability.R$attr: int finishSecondaryWithPrimary
com.baseflow.permissionhandler.R$id: int tag_transition_group
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.baseflow.location_permissions.LocationPermissionsPlugin: java.lang.String LOG_TAG
com.baseflow.permissionhandler.PermissionManager$ActivityResultListener: boolean alreadyCalled
com.baseflow.location_permissions.R$dimen: int notification_big_circle_margin
com.baseflow.location_permissions.LocationPermissionsPlugin: android.content.Context applicationContext
com.baseflow.googleapiavailability.R$attr: int nestedScrollViewStyle
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.baseflow.location_permissions.R$attr
com.baseflow.location_permissions.R$layout: R$layout()
com.baseflow.googleapiavailability.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.baseflow.permissionhandler.R$id: int action_container
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.baseflow.geolocator.R$id: int accessibility_custom_action_5
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_28
androidx.window.embedding.MatcherUtils
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
com.baseflow.permissionhandler.R: R()
com.baseflow.geolocator.R$styleable: int FontFamilyFont_android_fontWeight
com.baseflow.geolocator.R$integer
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
com.baseflow.geolocator.R$attr: int shortcutMatchRequired
com.baseflow.geolocator.R$attr: int buttonSize
com.baseflow.geolocator.R$string: int common_google_play_services_enable_text
com.baseflow.location_permissions.LocationPermissionsPlugin$ServiceStatus
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
com.baseflow.googleapiavailability.R$id: int notification_background
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.baseflow.geolocator.R$drawable: int notification_template_icon_bg
com.baseflow.googleapiavailability.R$styleable: int SplitPlaceholderRule_splitMinWidth
com.baseflow.permissionhandler.R$attr: int fontProviderQuery
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
com.baseflow.geolocator.tasks.TaskFactory: com.baseflow.geolocator.tasks.Task createStreamLocationUpdatesTask(android.content.Context,io.flutter.plugin.common.EventChannel$EventSink,java.lang.Object,com.baseflow.geolocator.OnCompletionListener)
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_android_fontWeight
androidx.window.embedding.ActivityFilter: int hashCode()
com.baseflow.geolocator.GeolocatorPlugin: java.lang.String METHOD_CHANNEL_NAME
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.baseflow.geolocator.R$id: int locale
com.baseflow.googleapiavailability.R$attr: int fontProviderFetchStrategy
com.baseflow.geolocator.data.LocationOptions: int accuracy
com.baseflow.geolocator.R$id: int notification_background
androidx.window.embedding.MatcherUtils: MatcherUtils()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
com.baseflow.location_permissions.LocationPermissionsPlugin: boolean access$100(android.content.Context)
com.baseflow.location_permissions.R$attr: int primaryActivityName
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_7
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask$2: LocationUpdatesUsingLocationServicesTask$2(com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask)
com.baseflow.permissionhandler.PermissionConstants$PermissionGroup
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.baseflow.permissionhandler.R$drawable
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
com.baseflow.geolocator.R$drawable: int notification_bg_normal_pressed
com.baseflow.googleapiavailability.R$styleable: int[] SignInButton
com.baseflow.googleapiavailability.R$drawable: R$drawable()
com.baseflow.geolocator.R$attr: int secondaryActivityName
com.baseflow.geolocator.R$attr: int queryPatterns
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
com.baseflow.googleapiavailability.R$dimen: int compat_notification_large_icon_max_width
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_25
com.baseflow.geolocator.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.baseflow.geolocator.R$styleable: int[] ActivityFilter
com.baseflow.permissionhandler.R$drawable: int notification_bg_low_pressed
com.baseflow.location_permissions.R$attr: int clearTop
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
com.baseflow.googleapiavailability.R$styleable: int SignInButton_buttonSize
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetrics: int hashCode()
com.baseflow.location_permissions.R$drawable: int notification_template_icon_bg
com.google.android.gms.internal.location.zzbf: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$dimen: int notification_main_column_padding_top
com.baseflow.location_permissions.R$style: int TextAppearance_Compat_Notification_Time
com.baseflow.location_permissions.R$id: int normal
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_CONTACTS
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.baseflow.permissionhandler.PermissionManager$RequestPermissionsListener: com.baseflow.permissionhandler.PermissionManager$ResultCallback callback
androidx.window.embedding.SplitRule
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
com.baseflow.geolocator.utils.MainThreadDispatcher$1
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_startColor
androidx.window.layout.SidecarCompat$Companion
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: void access$000(com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask,android.location.Location)
com.baseflow.geolocator.data.LocationOptions: long getTimeInterval()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
com.baseflow.permissionhandler.R$string: R$string()
com.baseflow.googleapiavailability.R$id: int none
com.baseflow.permissionhandler.R$id: int tag_accessibility_clickable_spans
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.baseflow.geolocator.tasks.ReverseGeocodingTask: void startTask()
com.baseflow.permissionhandler.R$id: int locale
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.location_permissions.R$color: int notification_icon_bg_color
com.baseflow.geolocator.data.GeocodingOptions: java.util.Locale getLocale()
com.baseflow.permissionhandler.PermissionManager: boolean ongoing
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.baseflow.permissionhandler.MethodCallHandlerImpl: void setPermissionRegistry(com.baseflow.permissionhandler.PermissionManager$PermissionRegistry)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
kotlinx.coroutines.LazyStandaloneCoroutine
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_text_dark
com.baseflow.geolocator.R$attr: int scopeUris
com.baseflow.location_permissions.R$style: R$style()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.baseflow.permissionhandler.R$drawable: int notification_template_icon_bg
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.baseflow.geolocator.utils.LocaleConverter: LocaleConverter()
com.baseflow.geolocator.R$id: int accessibility_custom_action_29
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
com.baseflow.googleapiavailability.R$string: int common_google_play_services_enable_title
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.savedstate.Recreator
com.baseflow.googleapiavailability.R$attr: int splitMinWidth
com.baseflow.geolocator.tasks.Task: void stopTask()
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
com.baseflow.googleapiavailability.R$id: int rtl
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.baseflow.geolocator.data.LocationOptions: int getAccuracy()
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int GOOGLE_PLAY_SERVICES_AVAILABILITY_SUCCESS
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: com.google.android.gms.location.LocationRequest createLocationRequest()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
com.baseflow.location_permissions.R$drawable: int notification_template_icon_low_bg
com.baseflow.location_permissions.R$styleable: int ActivityFilter_activityName
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.window.layout.WindowBackend
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.baseflow.geolocator.tasks.CalculateDistanceTask: CalculateDistanceTask(com.baseflow.geolocator.tasks.TaskContext)
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_centerX
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_LOCATION_WHEN_IN_USE
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
com.baseflow.geolocator.R$attr: int fontWeight
androidx.window.R$styleable: int SplitPairRule_clearTop
com.baseflow.location_permissions.LocationPermissionsPlugin: int toPermissionStatus(int)
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: com.baseflow.googleapiavailability.MethodCallHandlerImpl methodCallHandler
com.baseflow.permissionhandler.PermissionHandlerPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.baseflow.geolocator.R$id: int androidx_window_activity_scope
com.baseflow.permissionhandler.R$attr: int fontVariationSettings
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.embedding.SplitRule: int hashCode()
androidx.window.embedding.SplitInfo: int hashCode()
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: int GEOLOCATION_ACCURACY_LOWEST
androidx.window.R$attr: int splitMinWidth
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
com.baseflow.googleapiavailability.R$string: int common_google_play_services_notification_channel_name
com.baseflow.permissionhandler.R$style: int TextAppearance_Compat_Notification_Title
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_startY
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.baseflow.permissionhandler.R$style: int TextAppearance_Compat_Notification_Line2
com.baseflow.location_permissions.R$id: int right_icon
com.baseflow.googleapiavailability.R$style: int Widget_Compat_NotificationActionText
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.baseflow.location_permissions.LocationPermissionsPlugin$LocationServiceBroadcastReceiver: com.baseflow.location_permissions.LocationPermissionsPlugin locationPermissionsPlugin
com.baseflow.googleapiavailability.R$styleable: int[] Capability
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
com.baseflow.permissionhandler.R$dimen: int compat_notification_large_icon_max_width
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
com.baseflow.geolocator.data.CalculateDistanceOptions
com.baseflow.geolocator.R$id: int icon_only
com.baseflow.geolocator.R$dimen: int compat_button_padding_vertical_material
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.baseflow.geolocator.R$id: R$id()
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask$2: com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask this$0
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
com.baseflow.permissionhandler.R$id: int right_icon
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
com.baseflow.googleapiavailability.MethodCallHandlerImpl: void setActivity(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.baseflow.location_permissions.R$color
androidx.window.core.Version
com.baseflow.permissionhandler.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.baseflow.googleapiavailability.R$id: int tag_unhandled_key_listeners
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.window.R$styleable: R$styleable()
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_endX
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
com.baseflow.permissionhandler.PermissionManager: int checkNotificationPermissionStatus(android.content.Context)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_text_light_normal_background
com.baseflow.permissionhandler.R$id: int tag_accessibility_heading
com.baseflow.googleapiavailability.R$id: int tag_window_insets_animation_callback
com.baseflow.location_permissions.R$attr: int fontWeight
com.baseflow.geolocator.R$id: int text2
com.baseflow.googleapiavailability.R$string: int common_google_play_services_update_text
com.baseflow.geolocator.R$id: int tag_on_receive_content_mime_types
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.baseflow.permissionhandler.PermissionHandlerPlugin: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask$2: void onSuccess(android.location.Location)
kotlinx.coroutines.NodeList
com.baseflow.location_permissions.LocationPermissionsPlugin
com.baseflow.permissionhandler.PermissionHandlerPlugin: com.baseflow.permissionhandler.MethodCallHandlerImpl methodCallHandler
androidx.window.embedding.SplitRule: float splitRatio
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
androidx.window.embedding.SplitRule: float getSplitRatio()
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_text_dark_normal
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.baseflow.googleapiavailability.R$dimen: int notification_subtext_size
androidx.window.R$attr: int primaryActivityName
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.baseflow.geolocator.R$attr: int fontProviderQuery
com.baseflow.location_permissions.R$id: int accessibility_custom_action_27
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_android_fontStyle
com.baseflow.geolocator.GeolocatorPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
com.baseflow.geolocator.R$id: int accessibility_custom_action_21
com.baseflow.location_permissions.R$id: int tag_on_receive_content_listener
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.baseflow.geolocator.data.GeocodingOptions
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_1
com.baseflow.location_permissions.R$id: int text
com.baseflow.googleapiavailability.R$id: R$id()
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin
com.baseflow.geolocator.R$styleable: int LoadingImageView_imageAspectRatioAdjust
com.baseflow.permissionhandler.MethodCallHandlerImpl: com.baseflow.permissionhandler.PermissionManager$ActivityRegistry activityRegistry
com.baseflow.googleapiavailability.R$styleable: int FontFamily_fontProviderAuthority
com.baseflow.location_permissions.R$styleable: int Capability_queryPatterns
com.baseflow.geolocator.R$id: int accessibility_custom_action_4
com.baseflow.permissionhandler.PermissionHandlerPlugin
com.baseflow.permissionhandler.R$styleable: int[] SplitPairFilter
com.baseflow.location_permissions.R$id: int accessibility_custom_action_11
com.baseflow.permissionhandler.R$dimen: int notification_right_side_padding_top
com.baseflow.permissionhandler.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.R
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_IGNORE_BATTERY_OPTIMIZATIONS
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.baseflow.permissionhandler.ServiceManager: boolean isLocationServiceEnablePreKitKat(android.content.Context)
com.google.android.gms.maps.model.MarkerOptions: android.os.Parcelable$Creator CREATOR
com.baseflow.location_permissions.R$id: int time
com.baseflow.geolocator.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.baseflow.location_permissions.R$styleable: int SplitPairFilter_primaryActivityName
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask$GeolocationAccuracy
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_android_font
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.baseflow.googleapiavailability.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.android.gms.location.LocationCallback: void onLocationAvailability(com.google.android.gms.location.LocationAvailability)
com.baseflow.geolocator.R$attr: int finishPrimaryWithSecondary
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationManagerTask: void startTask()
androidx.window.embedding.SplitController: boolean isSplitSupported()
com.baseflow.geolocator.R$styleable: int[] ActivityRule
com.baseflow.geolocator.R$style: int TextAppearance_Compat_Notification_Info
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_light_default
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
com.baseflow.geolocator.R$styleable: int SignInButton_buttonSize
com.baseflow.googleapiavailability.R$id: int tag_accessibility_heading
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.baseflow.googleapiavailability.R$layout: int custom_dialog
com.baseflow.permissionhandler.R$id: int tag_accessibility_pane_title
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_startX
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.baseflow.location_permissions.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.baseflow.geolocator.utils.MainThreadDispatcher: void dispatch(java.lang.Runnable)
com.baseflow.geolocator.R$drawable: R$drawable()
androidx.window.core.Version: int minor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.baseflow.geolocator.R$drawable: int notification_template_icon_low_bg
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
com.baseflow.googleapiavailability.R$attr: int ttcIndex
com.baseflow.location_permissions.R$id: int tag_accessibility_clickable_spans
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: void onProviderDisabled(java.lang.String)
com.baseflow.location_permissions.LocationPermissionsPlugin: LocationPermissionsPlugin()
com.baseflow.location_permissions.R$attr: int ttcIndex
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
com.baseflow.geolocator.R$id: int accessibility_custom_action_9
androidx.window.layout.FoldingFeature: boolean isSeparating()
com.baseflow.geolocator.GeolocatorPlugin: java.lang.String EVENT_CHANNEL_NAME
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_icon_dark_focused
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_fontWeight
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.baseflow.geolocator.R$attr: int fontStyle
com.baseflow.permissionhandler.PermissionUtils: boolean isNeverAskAgainSelected(android.app.Activity,int)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.baseflow.location_permissions.R$id: int accessibility_custom_action_24
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
com.baseflow.googleapiavailability.R$drawable: int notification_tile_bg
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.baseflow.geolocator.R$dimen: int notification_large_icon_height
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
kotlin.jvm.internal.FunctionReference: boolean isOperator()
com.baseflow.permissionhandler.R$drawable: int notify_panel_notification_icon_bg
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.window.core.Bounds: boolean equals(java.lang.Object)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
com.baseflow.permissionhandler.ServiceManager
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
com.baseflow.permissionhandler.MethodCallHandlerImpl: com.baseflow.permissionhandler.PermissionManager permissionManager
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_centerColor
com.baseflow.permissionhandler.R$attr: int shortcutMatchRequired
com.baseflow.geolocator.data.Coordinate: double longitude
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.baseflow.permissionhandler.PermissionManager$ResultCallback
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_26
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_17
com.baseflow.geolocator.R$id: int tag_unhandled_key_listeners
com.baseflow.googleapiavailability.R$attr: int splitLayoutDirection
com.baseflow.location_permissions.R$id: int accessibility_custom_action_9
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
com.baseflow.location_permissions.LocationPermissionsPlugin: void processResult(int)
kotlin.jvm.internal.Lambda: Lambda(int)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
com.baseflow.permissionhandler.R$dimen: int compat_button_inset_horizontal_material
com.baseflow.geolocator.GeolocatorPlugin
com.baseflow.googleapiavailability.R$attr: int finishPrimaryWithSecondary
kotlin.jvm.internal.CallableReference: java.lang.String signature
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.baseflow.permissionhandler.BuildConfig: BuildConfig()
kotlinx.coroutines.JobCancellingNode
com.baseflow.location_permissions.R$styleable: int GradientColorItem_android_offset
com.baseflow.geolocator.R$styleable: int[] GradientColorItem
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
com.baseflow.geolocator.utils.MainThreadDispatcher$1: void run()
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void access$000(com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin)
com.baseflow.geolocator.R$layout: int notification_action_tombstone
com.baseflow.geolocator.data.wrapper.EventResponse: EventResponse(io.flutter.plugin.common.EventChannel$EventSink)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
com.baseflow.location_permissions.R$id: int line1
com.baseflow.geolocator.tasks.LocationUsingLocationManagerTask: android.location.LocationManager getLocationManager()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
com.baseflow.googleapiavailability.R$styleable: int ActivityFilter_activityName
com.baseflow.geolocator.data.wrapper.MethodResponse
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
com.baseflow.geolocator.R$styleable: int ActivityFilter_activityAction
com.baseflow.permissionhandler.R$attr: int activityAction
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.baseflow.permissionhandler.R$styleable: int SplitPairRule_splitMinWidth
com.baseflow.geolocator.R$color: int androidx_core_secondary_text_default_material_light
androidx.annotation.Keep
com.baseflow.location_permissions.R$styleable: int SplitPlaceholderRule_splitRatio
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.baseflow.geolocator.data.GeocodingOptions: GeocodingOptions(java.util.Locale)
com.baseflow.permissionhandler.R$attr: int font
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_PHONE
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.baseflow.googleapiavailability.R$color: R$color()
com.baseflow.geolocator.R$dimen: R$dimen()
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_icon_disabled
com.baseflow.geolocator.R$id: int tag_state_description
com.baseflow.location_permissions.R$id: int accessibility_custom_action_6
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: void handleError()
com.baseflow.geolocator.R$styleable: int ActivityFilter_activityName
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.baseflow.location_permissions.R$id: int accessibility_custom_action_16
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.window.core.Version: int getMinor()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_android_ttcIndex
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_font
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: void reportLocationUpdate(android.location.Location)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
com.baseflow.permissionhandler.R$style
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_21
com.baseflow.geolocator.R$attr: int nestedScrollViewStyle
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.baseflow.location_permissions.R$id: int tag_accessibility_heading
com.baseflow.geolocator.GeolocatorPlugin: GeolocatorPlugin()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.baseflow.permissionhandler.R$dimen: R$dimen()
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.baseflow.googleapiavailability.R$string: int common_google_play_services_update_title
com.baseflow.permissionhandler.R$styleable: int ColorStateListItem_android_color
com.baseflow.geolocator.utils.MainThreadDispatcher$2: com.baseflow.geolocator.data.wrapper.ChannelResponse val$channelResponse
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
com.example.ayyah_ride_customer.MainActivity
com.baseflow.permissionhandler.R$styleable: int GradientColorItem_android_offset
androidx.window.layout.SidecarCompat
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_16
androidx.window.embedding.SplitRule: int layoutDirection
com.baseflow.permissionhandler.R$drawable: int notification_icon_background
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_startX
com.baseflow.geolocator.R$styleable: int FontFamily_fontProviderAuthority
com.baseflow.googleapiavailability.R$id: int tag_on_receive_content_listener
com.baseflow.geolocator.R$id: int accessibility_action_clickable_span
androidx.activity.ComponentActivity$2
com.baseflow.permissionhandler.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_dark_pressed
com.baseflow.permissionhandler.R$id: int italic
com.baseflow.location_permissions.R$drawable: int notification_action_background
com.baseflow.location_permissions.R$styleable: int FontFamily_fontProviderCerts
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.baseflow.geolocator.R$id: int action_divider
com.baseflow.permissionhandler.PermissionManager: int checkPermissionStatus(int,android.content.Context,android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
com.baseflow.location_permissions.R$attr: int finishSecondaryWithPrimary
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.baseflow.permissionhandler.R$dimen: int compat_notification_large_icon_max_height
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_font
com.baseflow.permissionhandler.R$color: int androidx_core_ripple_material_light
com.baseflow.location_permissions.R$styleable: int SplitPairFilter_secondaryActivityAction
com.baseflow.googleapiavailability.R$drawable: int notification_icon_background
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_21
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
androidx.window.embedding.SplitPlaceholderRule
com.baseflow.googleapiavailability.R$string: int common_google_play_services_unknown_issue
com.baseflow.location_permissions.LocationPermissionsPlugin$LocationServiceBroadcastReceiver: LocationPermissionsPlugin$LocationServiceBroadcastReceiver(com.baseflow.location_permissions.LocationPermissionsPlugin)
com.baseflow.permissionhandler.R$attr: int alwaysExpand
androidx.window.layout.SidecarAdapter
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.baseflow.location_permissions.R$string: int status_bar_notification_info_overflow
com.baseflow.geolocator.R$id: int time
com.baseflow.permissionhandler.PermissionUtils: boolean neverAskAgainSelected(android.app.Activity,java.lang.String)
com.google.android.gms.internal.location.zzo: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: java.lang.String getDescription()
com.baseflow.geolocator.R$style: int TextAppearance_Compat_Notification_Title
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_text_dark
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
com.baseflow.location_permissions.R$styleable: int ActivityFilter_activityAction
com.baseflow.location_permissions.R$style
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.baseflow.geolocator.R$styleable: int GradientColor_android_centerColor
com.google.android.gms.common.internal.ReflectedParcelable
com.baseflow.geolocator.R$styleable: int SplitPairFilter_primaryActivityName
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
com.baseflow.geolocator.tasks.LocationUsingLocationManagerTask
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: int GEOLOCATION_ACCURACY_BEST_FOR_NAVIGATION
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.baseflow.geolocator.data.LocationOptions: LocationOptions(int,long,boolean,long)
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.baseflow.geolocator.R$attr: int splitRatio
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.google.android.gms.maps.model.VisibleRegion: android.os.Parcelable$Creator CREATOR
com.baseflow.googleapiavailability.R$drawable: int notification_template_icon_bg
androidx.window.core.Bounds: android.graphics.Rect toRect()
com.baseflow.geolocator.data.Result: Result(io.flutter.plugin.common.EventChannel$EventSink)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.baseflow.geolocator.R$integer: int status_bar_notification_info_maxnum
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.baseflow.geolocator.tasks.ForwardGeocodingTask: ForwardGeocodingTask(com.baseflow.geolocator.tasks.TaskContext)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
com.baseflow.location_permissions.LocationPermissionsPlugin: io.flutter.plugin.common.EventChannel$EventSink mEventSink
com.baseflow.location_permissions.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.baseflow.geolocator.R$id: int accessibility_custom_action_30
com.baseflow.permissionhandler.MethodCallHandlerImpl: com.baseflow.permissionhandler.AppSettingsManager appSettingsManager
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
com.baseflow.geolocator.R$id: int right_side
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.baseflow.geolocator.R$id: int title
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationManagerTask
com.baseflow.permissionhandler.PermissionManager$ErrorCallback: void onError(java.lang.String,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.baseflow.location_permissions.R: R()
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R: R()
com.baseflow.googleapiavailability.R$layout: int notification_template_custom_big
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
com.baseflow.googleapiavailability.R$id: int accessibility_action_clickable_span
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_22
com.baseflow.location_permissions.R$styleable: int GradientColor_android_gradientRadius
com.baseflow.location_permissions.LocationPermissionsPlugin: int SERVICE_STATUS_ENABLED
androidx.savedstate.SavedStateRegistry$1
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.baseflow.googleapiavailability.R$id: int standard
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
com.baseflow.permissionhandler.R$dimen: int notification_small_icon_size_as_large
androidx.window.embedding.SplitPairFilter
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.baseflow.geolocator.GeolocatorPlugin: boolean onViewDestroy(io.flutter.view.FlutterNativeView)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
com.baseflow.permissionhandler.PermissionConstants: java.lang.String LOG_TAG
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
com.google.android.gms.maps.GoogleMapOptions: android.os.Parcelable$Creator CREATOR
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_ttcIndex
com.baseflow.googleapiavailability.R$styleable: int LoadingImageView_imageAspectRatioAdjust
com.baseflow.googleapiavailability.R$id: int tag_unhandled_key_event_manager
com.baseflow.permissionhandler.ServiceManager: int checkServiceStatus(int,android.content.Context)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_light_focused
com.baseflow.permissionhandler.R$drawable: int notification_bg_normal
com.baseflow.geolocator.tasks.ForwardGeocodingTask: void startTask()
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
com.baseflow.permissionhandler.PermissionConstants$PermissionStatus
androidx.window.core.Version$bigInteger$2
com.baseflow.geolocator.R$style: int TextAppearance_Compat_Notification_Time
androidx.window.core.Bounds: int getRight()
com.baseflow.permissionhandler.R$id: int info
io.flutter.plugins.googlemaps.GoogleMapsPlugin
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_4
androidx.window.layout.DisplayCompatHelperApi28
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
com.baseflow.location_permissions.R$id: int tag_screen_reader_focusable
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_centerColor
com.baseflow.location_permissions.LocationPermissionsPlugin: boolean shouldShowRequestPermissionRationale(android.app.Activity)
com.baseflow.googleapiavailability.R$attr: int alwaysExpand
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.baseflow.geolocator.R$color
androidx.window.embedding.SplitController: void clearRegisteredRules()
com.baseflow.location_permissions.R$layout: int notification_action_tombstone
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.baseflow.geolocator.GeolocatorPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask
com.baseflow.geolocator.data.LocationOptions: boolean isForceAndroidLocationManager()
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_24
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
com.baseflow.permissionhandler.PermissionManager$ErrorCallback
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
androidx.lifecycle.ReflectiveGenericLifecycleObserver
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
com.baseflow.geolocator.R$attr: int activityAction
com.baseflow.geolocator.R$id: int accessibility_custom_action_10
com.baseflow.location_permissions.LocationPermissionsPlugin$PermissionStatus
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.baseflow.googleapiavailability.R$string: int common_google_play_services_wear_update_text
com.baseflow.permissionhandler.R$styleable: int SplitPairFilter_secondaryActivityAction
com.baseflow.googleapiavailability.R$id: int auto
com.baseflow.googleapiavailability.R$id: int chronometer
androidx.window.R$attr: int secondaryActivityName
com.baseflow.permissionhandler.R$styleable: int[] GradientColor
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.baseflow.geolocator.R$styleable: int SplitPlaceholderRule_splitMinWidth
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.baseflow.googleapiavailability.R$styleable: int SignInButton_colorScheme
com.baseflow.geolocator.data.AddressMapper: java.util.List toHashMapList(java.util.List)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_android_font
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
com.baseflow.googleapiavailability.R$layout
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
com.baseflow.geolocator.R$id: int actions
com.baseflow.geolocator.R$drawable: int googleg_standard_color_18
com.baseflow.permissionhandler.R$attr: int fontProviderFetchStrategy
com.baseflow.permissionhandler.R$attr: int fontProviderSystemFontFamily
com.baseflow.location_permissions.R$styleable: int[] ActivityFilter
com.baseflow.location_permissions.R$id: int tag_accessibility_pane_title
com.baseflow.geolocator.data.ForwardGeocodingOptions
com.baseflow.googleapiavailability.R$id: int italic
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.baseflow.googleapiavailability.R$style
com.baseflow.permissionhandler.R$id: int tag_screen_reader_focusable
com.baseflow.location_permissions.R$id: int accessibility_custom_action_28
com.baseflow.permissionhandler.R$styleable: int[] Capability
com.baseflow.permissionhandler.PermissionHandlerPlugin: void stopListeningToActivity()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.baseflow.geolocator.data.Result: io.flutter.plugin.common.EventChannel$EventSink mEventResult
androidx.window.R$styleable: int[] SplitPairFilter
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_startColor
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
com.baseflow.geolocator.data.wrapper.ChannelResponse: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.baseflow.googleapiavailability.R$attr: int fontProviderPackage
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.window.core.Version: int major
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_android_fontStyle
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_LOCATION
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
androidx.window.layout.WindowInfoTracker
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.java.R
com.baseflow.geolocator.R$attr: int imageAspectRatio
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
com.google.android.gms.maps.model.LatLngBounds: android.os.Parcelable$Creator CREATOR
com.baseflow.location_permissions.R$attr: int fontProviderFetchStrategy
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.baseflow.permissionhandler.R$string: int status_bar_notification_info_overflow
com.baseflow.permissionhandler.R$layout: int notification_action
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.baseflow.location_permissions.R$dimen: int notification_small_icon_size_as_large
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
com.baseflow.googleapiavailability.R$styleable: R$styleable()
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.baseflow.geolocator.tasks.ReverseGeocodingTask$1: com.baseflow.geolocator.data.wrapper.ChannelResponse val$channelResponse
com.baseflow.geolocator.utils.LocaleConverter: java.util.Locale fromLanguageTag(java.lang.String)
com.baseflow.googleapiavailability.R$attr: int imageAspectRatio
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask$1: com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask this$0
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.baseflow.permissionhandler.R$id: int ltr
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.flutter.embedding.android.FlutterImageView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask$1
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_text_light_normal
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_text_dark_normal_background
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_20
com.baseflow.geolocator.data.Coordinate: Coordinate(double,double)
com.baseflow.googleapiavailability.R$drawable: int notification_template_icon_low_bg
com.baseflow.googleapiavailability.R$attr: int fontStyle
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.baseflow.permissionhandler.R$integer: int status_bar_notification_info_maxnum
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: io.flutter.plugin.common.MethodChannel channel
com.baseflow.geolocator.R$id: int accessibility_custom_action_23
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
com.baseflow.permissionhandler.R$attr: int clearTop
com.baseflow.location_permissions.LocationPermissionsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.location.zzaj: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: boolean mStopAfterFirstLocationUpdate
com.baseflow.geolocator.tasks.Task: java.util.UUID getTaskID()
com.baseflow.geolocator.R$styleable: int SignInButton_colorScheme
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.baseflow.geolocator.R$color: int androidx_core_ripple_material_light
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
com.baseflow.geolocator.R$string: int status_bar_notification_info_overflow
kotlinx.coroutines.channels.Send
com.baseflow.location_permissions.R$id
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.baseflow.geolocator.tasks.TaskContext: java.lang.Object getOptions()
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_8
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
com.baseflow.location_permissions.R$id: int accessibility_custom_action_21
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_PHOTOS
com.baseflow.permissionhandler.R$drawable: int notification_template_icon_low_bg
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
com.baseflow.location_permissions.BuildConfig: BuildConfig()
com.baseflow.location_permissions.R$id: int tag_on_receive_content_mime_types
kotlinx.coroutines.CancellableContinuationImpl: int _decision
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
com.baseflow.geolocator.R$dimen: int compat_button_inset_horizontal_material
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.location_permissions.R$color: int androidx_core_ripple_material_light
com.baseflow.permissionhandler.PermissionUtils: boolean hasPermissionInManifest(android.content.Context,java.util.ArrayList,java.lang.String)
androidx.window.embedding.ActivityStack
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.baseflow.geolocator.tasks.Task: com.baseflow.geolocator.tasks.TaskContext mTaskContext
com.baseflow.location_permissions.R$id: int tag_accessibility_actions
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.baseflow.geolocator.R$style: int TextAppearance_Compat_Notification
kotlinx.coroutines.AbstractCoroutine
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_3
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin$1: com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin val$plugin
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.baseflow.geolocator.R$id: int accessibility_custom_action_24
kotlinx.coroutines.UndispatchedCoroutine
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_STATUS_RESTRICTED
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.baseflow.geolocator.R$styleable: int FontFamilyFont_android_font
com.baseflow.location_permissions.R$id: int forever
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.baseflow.geolocator.tasks.TaskFactory: com.baseflow.geolocator.tasks.Task createCalculateDistanceTask(android.content.Context,io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.baseflow.geolocator.OnCompletionListener)
com.baseflow.location_permissions.LocationPermissionsPlugin: void access$200(com.baseflow.location_permissions.LocationPermissionsPlugin,boolean)
com.baseflow.geolocator.data.LocationOptions: long distanceFilter
com.baseflow.geolocator.data.LocationOptions: boolean forceAndroidLocationManager
androidx.window.layout.EmptyDecorator
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.baseflow.geolocator.R$id: int accessibility_custom_action_26
com.baseflow.permissionhandler.R$id: int action_text
com.baseflow.permissionhandler.R$styleable: int[] SplitPlaceholderRule
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
com.baseflow.permissionhandler.R$style: int Widget_Compat_NotificationActionContainer
com.baseflow.permissionhandler.R$dimen: int notification_large_icon_height
com.baseflow.googleapiavailability.R$attr: int colorScheme
com.baseflow.location_permissions.R$attr: int fontProviderSystemFontFamily
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.baseflow.geolocator.R$styleable: int FontFamily_fontProviderFetchStrategy
com.baseflow.googleapiavailability.R$attr: int secondaryActivityAction
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.baseflow.location_permissions.R$style: int TextAppearance_Compat_Notification_Line2
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
com.baseflow.geolocator.R$id: int action_image
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_android_fontStyle
com.baseflow.permissionhandler.R$dimen: int compat_button_padding_horizontal_material
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.baseflow.location_permissions.R$styleable: int[] GradientColor
com.baseflow.geolocator.utils.MainThreadDispatcher$2
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.baseflow.permissionhandler.R$styleable: int ColorStateListItem_android_alpha
com.baseflow.geolocator.R$attr: int alpha
androidx.window.core.Bounds
com.baseflow.geolocator.data.wrapper.ChannelResponse: com.baseflow.geolocator.data.wrapper.ChannelResponse wrap(java.lang.Object)
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_19
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.baseflow.location_permissions.LocationPermissionsPlugin$LocationServiceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)
com.baseflow.location_permissions.R$styleable: int SplitPairRule_splitRatio
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_2
androidx.window.core.ExperimentalWindowApi
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask$1
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_25
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.baseflow.permissionhandler.R$id: int normal
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
com.baseflow.permissionhandler.R$id: int title
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.baseflow.permissionhandler.PermissionManager$ResultCallback: void onResult(java.util.Map)
com.baseflow.location_permissions.R$style: int TextAppearance_Compat_Notification_Title
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_text_dark_normal
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.baseflow.location_permissions.R$attr: int placeholderActivityName
kotlinx.coroutines.channels.Receive
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.baseflow.permissionhandler.R$attr: R$attr()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.WindowLayoutInfo
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
com.baseflow.geolocator.utils.LocaleConverter
com.baseflow.googleapiavailability.R$drawable
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_27
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.baseflow.permissionhandler.R$drawable: int notification_bg_low
androidx.core.content.FileProvider: FileProvider()
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.baseflow.location_permissions.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_23
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
com.baseflow.permissionhandler.PermissionUtils: boolean getRequestedPermissionBefore(android.content.Context,java.lang.String)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
com.baseflow.googleapiavailability.R$layout: int notification_action_tombstone
com.baseflow.geolocator.tasks.ReverseGeocodingTask: ReverseGeocodingTask(com.baseflow.geolocator.tasks.TaskContext)
com.baseflow.geolocator.data.Result: void error(java.lang.String,java.lang.String,java.lang.Object)
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void unregisterPlugin()
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
androidx.window.layout.FoldingFeature$OcclusionType$Companion
com.baseflow.geolocator.R$dimen: int notification_right_side_padding_top
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_LOCATION_ALWAYS
com.baseflow.location_permissions.R$dimen: int notification_subtext_size
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.baseflow.geolocator.R$id: int accessibility_custom_action_22
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.baseflow.geolocator.R$styleable: int LoadingImageView_circleCrop
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_endColor
androidx.lifecycle.ReportFragment$LifecycleCallbacks
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.baseflow.googleapiavailability.R$attr: int buttonSize
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.window.core.Bounds: Bounds(int,int,int,int)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
com.baseflow.googleapiavailability.BuildConfig
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationManagerTask: LastKnownLocationUsingLocationManagerTask(com.baseflow.geolocator.tasks.TaskContext)
com.baseflow.geolocator.R$dimen: int notification_large_icon_width
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: com.google.android.gms.location.LocationCallback mLocationCallback
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.baseflow.googleapiavailability.R$drawable: int googleg_disabled_color_18
com.baseflow.permissionhandler.R$dimen: int notification_right_icon_size
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
kotlinx.coroutines.internal.LockFreeTaskQueueCore
com.baseflow.geolocator.tasks.Task: com.baseflow.geolocator.tasks.TaskContext getTaskContext()
com.baseflow.googleapiavailability.BuildConfig: java.lang.String BUILD_TYPE
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
com.baseflow.location_permissions.R$drawable: int notification_bg_low
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.baseflow.permissionhandler.PermissionUtils: PermissionUtils()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.baseflow.location_permissions.R$attr: int fontStyle
com.baseflow.permissionhandler.PermissionManager$RequestPermissionsListener
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask$1: LastKnownLocationUsingLocationServicesTask$1(com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask)
com.baseflow.permissionhandler.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
kotlin.jvm.internal.FunctionReference: int getArity()
com.baseflow.geolocator.utils.MainThreadDispatcher$2: void run()
com.baseflow.geolocator.R$styleable: int[] SignInButton
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_STATUS_GRANTED
com.baseflow.geolocator.tasks.TaskContext: com.baseflow.geolocator.tasks.TaskContext buildForEventSink(android.content.Context,io.flutter.plugin.common.EventChannel$EventSink,java.lang.Object,com.baseflow.geolocator.OnCompletionListener)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.baseflow.permissionhandler.R$id: int accessibility_action_clickable_span
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
kotlinx.coroutines.JobSupport
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.baseflow.location_permissions.R$attr: int splitMinSmallestWidth
com.baseflow.location_permissions.R$id: int async
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_dark_default
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.baseflow.geolocator.tasks.LocationUsingLocationServicesTask: com.baseflow.geolocator.data.LocationOptions mLocationOptions
com.baseflow.permissionhandler.MethodCallHandlerImpl: android.app.Activity activity
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
com.baseflow.permissionhandler.R$styleable: int[] ColorStateListItem
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
com.baseflow.permissionhandler.R$id: int action_image
com.baseflow.location_permissions.R$dimen: int notification_main_column_padding_top
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.baseflow.location_permissions.LocationPermissionsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.baseflow.googleapiavailability.R$dimen: int compat_control_corner_material
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.baseflow.geolocator.utils.MainThreadDispatcher: MainThreadDispatcher()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.maps.model.CameraPosition: android.os.Parcelable$Creator CREATOR
com.baseflow.permissionhandler.R$attr: int primaryActivityName
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
com.baseflow.googleapiavailability.R$attr: int fontProviderCerts
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_17
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
com.baseflow.googleapiavailability.R$attr: int secondaryActivityName
kotlinx.coroutines.EventLoopImplBase
com.baseflow.geolocator.R$attr: int fontProviderFetchTimeout
com.baseflow.location_permissions.R$dimen: int notification_top_pad_large_text
com.baseflow.permissionhandler.R$color: int androidx_core_secondary_text_default_material_light
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.baseflow.location_permissions.R$id: int accessibility_custom_action_26
androidx.window.embedding.SplitRule: int getLayoutDirection()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
com.baseflow.location_permissions.R$styleable: int GradientColor_android_startY
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_19
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask: LastKnownLocationUsingLocationServicesTask(com.baseflow.geolocator.tasks.TaskContext)
androidx.window.layout.HardwareFoldingFeature$Type$Companion
com.baseflow.location_permissions.R$id: int actions
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
com.baseflow.permissionhandler.R$styleable: int ActivityFilter_activityName
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
com.baseflow.geolocator.tasks.TaskFactory: com.baseflow.geolocator.tasks.Task createLastKnownLocationTask(android.content.Context,io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.baseflow.geolocator.OnCompletionListener)
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.baseflow.googleapiavailability.R$id: int tag_on_apply_window_listener
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.baseflow.permissionhandler.R$color: int notification_icon_bg_color
com.baseflow.location_permissions.R$id: int rtl
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.baseflow.permissionhandler.R$id: int line3
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
com.baseflow.geolocator.R$styleable: int[] FontFamilyFont
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.window.core.Bounds: int getBottom()
kotlin.jvm.internal.Lambda: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.baseflow.googleapiavailability.R$styleable: int Capability_queryPatterns
androidx.fragment.app.FragmentManagerViewModel
com.baseflow.permissionhandler.R$drawable: R$drawable()
com.baseflow.geolocator.data.CalculateDistanceOptions: com.baseflow.geolocator.data.CalculateDistanceOptions parseArguments(java.lang.Object)
androidx.window.core.Version: int getPatch()
com.baseflow.permissionhandler.R$attr: int fontStyle
com.baseflow.geolocator.R$string: int common_open_on_phone
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
androidx.window.core.Bounds: int getTop()
com.baseflow.geolocator.tasks.ForwardGeocodingTask$1
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
com.baseflow.geolocator.data.ForwardGeocodingOptions: java.lang.String getAddressToLookup()
com.baseflow.permissionhandler.R$styleable: int ColorStateListItem_alpha
com.baseflow.permissionhandler.R$attr: int finishSecondaryWithPrimary
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
com.baseflow.location_permissions.LocationPermissionsPlugin: void onDetachedFromActivity()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
com.baseflow.geolocator.R$drawable: int notification_bg_low
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_light_disabled
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext
com.baseflow.googleapiavailability.R$string: int common_google_play_services_notification_ticker
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.baseflow.geolocator.R$attr: int fontProviderFetchStrategy
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.baseflow.geolocator.data.wrapper.ChannelResponse
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
com.baseflow.location_permissions.R$drawable: int notify_panel_notification_icon_bg
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_fontStyle
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
androidx.window.core.Bounds: int getWidth()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.baseflow.geolocator.data.LocationOptions: com.baseflow.geolocator.data.LocationOptions parseArguments(java.lang.Object)
com.baseflow.geolocator.R$attr: int colorScheme
com.baseflow.geolocator.R$id: int adjust_width
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_MICROPHONE
com.baseflow.googleapiavailability.R$dimen: int notification_right_side_padding_top
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_ACCESS_MEDIA_LOCATION
kotlin.jvm.internal.FunctionReference: boolean isInfix()
io.flutter.plugins.share.ShareFileProvider
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.baseflow.googleapiavailability.R$layout: int notification_template_part_time
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_30
com.baseflow.permissionhandler.R$styleable: int ActivityRule_alwaysExpand
androidx.window.core.Bounds: boolean isEmpty()
com.baseflow.geolocator.R$id: int accessibility_custom_action_14
kotlinx.coroutines.channels.Closed
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_SPEECH
androidx.window.layout.SidecarWindowBackend$Companion
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_SMS
androidx.window.core.Bounds: int top
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
com.baseflow.location_permissions.LocationPermissionsPlugin: int checkPermissionStatus(android.content.Context,int)
com.baseflow.googleapiavailability.R$drawable: int notification_bg_low_normal
com.baseflow.geolocator.tasks.LocationUsingLocationManagerTask: android.content.Context mAndroidContext
com.baseflow.geolocator.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.baseflow.location_permissions.LocationPermissionsPlugin: int SERVICE_STATUS_NOT_APPLICABLE
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask$2: com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask this$0
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
com.baseflow.location_permissions.R$attr: int font
com.baseflow.geolocator.tasks.ReverseGeocodingTask: com.baseflow.geolocator.data.Coordinate access$000(com.baseflow.geolocator.tasks.ReverseGeocodingTask)
com.baseflow.location_permissions.LocationPermissionsPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
com.baseflow.geolocator.R$dimen: int notification_small_icon_background_padding
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
com.baseflow.geolocator.data.wrapper.MethodResponse: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
com.baseflow.googleapiavailability.R$string: int common_google_play_services_update_button
com.baseflow.geolocator.R$styleable: int[] SplitPairRule
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.ActivityRule: boolean alwaysExpand
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
com.baseflow.googleapiavailability.R$id: int notification_main_column_container
androidx.window.core.Version: java.lang.String description
com.baseflow.geolocator.R$id: int accessibility_custom_action_1
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue
com.baseflow.location_permissions.R$styleable: int GradientColor_android_centerY
com.baseflow.geolocator.R$color: R$color()
com.baseflow.permissionhandler.PermissionManager
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.baseflow.location_permissions.LocationPermissionsPlugin: void access$300(com.baseflow.location_permissions.LocationPermissionsPlugin,java.lang.String[],int[])
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.baseflow.googleapiavailability.R$drawable: int common_google_signin_btn_icon_dark_focused
com.baseflow.geolocator.R$dimen: int compat_button_padding_horizontal_material
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_STATUS_DENIED
com.baseflow.permissionhandler.R$styleable: int GradientColor_android_gradientRadius
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_UNKNOWN
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
com.baseflow.geolocator.R$dimen: int notification_action_icon_size
com.baseflow.location_permissions.R$styleable: int[] GradientColorItem
com.google.android.gms.maps.model.PolylineOptions: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker
com.baseflow.location_permissions.LocationPermissionsPlugin: boolean hasPermissionInManifest(java.lang.String,android.content.Context)
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: int GEOLOCATION_ACCURACY_HIGH
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
androidx.window.layout.ActivityCompatHelperApi30
com.baseflow.location_permissions.R$layout
com.baseflow.geolocator.utils.MainThreadDispatcher$1: java.lang.String val$error
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.baseflow.permissionhandler.R$styleable
com.baseflow.permissionhandler.R$dimen: int notification_large_icon_width
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
com.baseflow.geolocator.R$id: int normal
com.google.android.gms.common.api.GoogleApiActivity
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_0
com.baseflow.permissionhandler.R$id: int tag_unhandled_key_listeners
com.baseflow.googleapiavailability.R$style: int Widget_Compat_NotificationActionContainer
com.baseflow.geolocator.R$attr: int fontProviderSystemFontFamily
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
com.baseflow.location_permissions.LocationPermissionsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.baseflow.permissionhandler.PermissionHandlerPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_6
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
com.baseflow.permissionhandler.PermissionHandlerPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.baseflow.location_permissions.LocationPermissionsPlugin: int PERMISSION_LEVEL_AUTO
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.baseflow.location_permissions.R$attr: int fontProviderAuthority
kotlinx.coroutines.internal.DispatchedContinuation
com.baseflow.location_permissions.R$id: int action_container
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_ACTIVITY_RECOGNITION
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
com.baseflow.geolocator.R$drawable
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.baseflow.googleapiavailability.R$layout: int notification_template_icon_group
com.baseflow.geolocator.tasks.TaskFactory: com.baseflow.geolocator.tasks.Task createCurrentLocationTask(android.content.Context,io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.baseflow.geolocator.OnCompletionListener)
com.baseflow.googleapiavailability.R$dimen: int notification_action_icon_size
com.baseflow.permissionhandler.BuildConfig: java.lang.String BUILD_TYPE
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
com.baseflow.permissionhandler.R$drawable: int notification_tile_bg
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
com.baseflow.location_permissions.R$attr: int fontVariationSettings
com.baseflow.geolocator.R$styleable: int ActivityRule_alwaysExpand
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.baseflow.geolocator.R$drawable: int notification_icon_background
com.baseflow.googleapiavailability.R$styleable: int LoadingImageView_circleCrop
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.baseflow.geolocator.R$id: int tag_screen_reader_focusable
com.baseflow.googleapiavailability.R$dimen: int notification_right_icon_size
com.baseflow.location_permissions.R$id: int accessibility_custom_action_25
androidx.window.R$id: int ltr
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
com.baseflow.location_permissions.R$styleable: int GradientColor_android_endY
com.baseflow.location_permissions.BuildConfig
com.baseflow.googleapiavailability.R$id: int icon_group
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.baseflow.geolocator.R$styleable: int[] ColorStateListItem
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
com.baseflow.location_permissions.R$styleable: int[] ColorStateListItem
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_CALENDAR
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
kotlinx.coroutines.JobSupport$Finishing
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask$2: void onSuccess(java.lang.Object)
com.baseflow.geolocator.tasks.ForwardGeocodingTask$1: com.baseflow.geolocator.data.ForwardGeocodingOptions val$options
com.baseflow.googleapiavailability.R$attr: int fontProviderQuery
com.baseflow.geolocator.R$id: int line3
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
com.baseflow.location_permissions.R$string: R$string()
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
com.baseflow.location_permissions.R$styleable: int[] SplitPlaceholderRule
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_font
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_light_default
androidx.window.layout.HardwareFoldingFeature: int hashCode()
com.baseflow.permissionhandler.R$id: int notification_background
com.baseflow.permissionhandler.R$drawable: int notification_action_background
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.baseflow.googleapiavailability.R$string: int common_google_play_services_enable_text
androidx.window.layout.ExtensionInterfaceCompat
com.google.android.gms.common.annotation.KeepName
com.baseflow.geolocator.utils.MainThreadDispatcher$2: java.lang.Object val$result
com.baseflow.googleapiavailability.R$style: int TextAppearance_Compat_Notification
com.baseflow.googleapiavailability.R$string: int common_signin_button_text
com.baseflow.geolocator.tasks.Task: java.util.UUID mTaskID
com.baseflow.googleapiavailability.R$id: int adjust_width
com.baseflow.location_permissions.R$drawable: int notification_icon_background
com.baseflow.geolocator.R$string: int common_google_play_services_update_title
kotlin.jvm.internal.FunctionReference: int flags
com.baseflow.location_permissions.R$styleable: R$styleable()
com.baseflow.location_permissions.R$id: int notification_main_column_container
com.baseflow.googleapiavailability.R$attr: int fontProviderAuthority
kotlinx.coroutines.JobNode
com.baseflow.location_permissions.R$string
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$id: int accessibility_custom_action_8
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
com.baseflow.location_permissions.R$dimen: int notification_right_side_padding_top
kotlinx.coroutines.channels.LinkedListChannel
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.baseflow.googleapiavailability.R$string: int common_google_play_services_unsupported_text
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_fontWeight
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
com.baseflow.googleapiavailability.MethodCallHandlerImpl$GooglePlayServicesAvailability
com.baseflow.location_permissions.R$id: int accessibility_custom_action_12
androidx.window.layout.FoldingFeature$State
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: GoogleMapsPlugin()
kotlinx.coroutines.InvokeOnCompletion
com.baseflow.location_permissions.LocationPermissionsPlugin: boolean isLocationServiceEnabled(android.content.Context)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
com.baseflow.geolocator.tasks.ReverseGeocodingTask
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
com.baseflow.permissionhandler.R$layout: int notification_template_part_time
com.baseflow.location_permissions.R$id: int ltr
com.baseflow.permissionhandler.R$id: int tag_state_description
com.baseflow.permissionhandler.R$dimen: int notification_main_column_padding_top
com.baseflow.googleapiavailability.R$id: int dark
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_CAMERA
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
com.baseflow.permissionhandler.R$layout: int notification_template_icon_group
com.baseflow.permissionhandler.R$id: int text
com.baseflow.geolocator.R$style
com.baseflow.googleapiavailability.R$string: int common_google_play_services_enable_button
com.baseflow.googleapiavailability.R$id: int title
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
com.baseflow.location_permissions.R$id: int accessibility_custom_action_2
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int toPlayServiceAvailability(int)
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.baseflow.geolocator.R$id: int accessibility_custom_action_16
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: LocationUpdatesUsingLocationServicesTask(com.baseflow.geolocator.tasks.TaskContext,boolean)
com.baseflow.geolocator.R$id: int async
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
androidx.window.embedding.SplitController$Companion
androidx.window.embedding.SplitRuleParser
androidx.window.R$id
com.baseflow.location_permissions.LocationPermissionsPlugin$1: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.baseflow.permissionhandler.R$dimen: int notification_action_text_size
com.baseflow.permissionhandler.R$id: int dialog_button
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.baseflow.location_permissions.R$id: int tag_transition_group
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
com.baseflow.geolocator.data.PositionMapper
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
com.baseflow.location_permissions.BuildConfig: boolean DEBUG
com.baseflow.geolocator.R$id: int adjust_height
com.baseflow.geolocator.R$id: int dark
com.baseflow.googleapiavailability.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.baseflow.location_permissions.LocationPermissionsPlugin: int SERVICE_STATUS_UNKNOWN
com.baseflow.geolocator.R$id: int accessibility_custom_action_6
com.baseflow.geolocator.R$styleable: int FontFamily_fontProviderFetchTimeout
com.baseflow.location_permissions.R$id: int accessibility_custom_action_5
com.baseflow.location_permissions.LocationPermissionsPlugin: int PERMISSION_STATUS_UNKNOWN
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int ActivityFilter_activityAction
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_12
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
com.baseflow.googleapiavailability.R$id: int info
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
com.baseflow.googleapiavailability.R$styleable: int SplitPairRule_clearTop
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.baseflow.location_permissions.R$layout: int notification_template_icon_group
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.baseflow.geolocator.R$id: int auto
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.baseflow.geolocator.data.ReverseGeocodingOptions: com.baseflow.geolocator.data.ReverseGeocodingOptions parseArguments(java.lang.Object)
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.window.R$styleable: int SplitPairRule_splitRatio
com.baseflow.permissionhandler.PermissionManager$RequestPermissionsListener: PermissionManager$RequestPermissionsListener(android.app.Activity,java.util.Map,com.baseflow.permissionhandler.PermissionManager$ResultCallback)
androidx.window.R$styleable: int ActivityFilter_activityName
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
com.baseflow.geolocator.data.Result
com.baseflow.permissionhandler.PermissionUtils: int parseManifestName(java.lang.String)
androidx.window.embedding.ActivityStack: boolean isEmpty
com.baseflow.googleapiavailability.R$string
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_18
com.baseflow.permissionhandler.R$styleable: int ActivityFilter_activityAction
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.baseflow.geolocator.R$string: int common_google_play_services_unsupported_text
com.baseflow.permissionhandler.R$styleable: int SplitPlaceholderRule_splitRatio
com.baseflow.googleapiavailability.R$id: int tag_state_description
com.baseflow.geolocator.R$dimen: int notification_action_text_size
com.baseflow.location_permissions.R$id: int accessibility_custom_action_23
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
com.baseflow.geolocator.R$id: int info
com.baseflow.geolocator.R$layout: int custom_dialog
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_icon_light_focused
com.baseflow.geolocator.utils.MainThreadDispatcher$2: MainThreadDispatcher$2(com.baseflow.geolocator.data.wrapper.ChannelResponse,java.lang.Object)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
com.baseflow.geolocator.data.LocationOptions: long timeInterval
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.baseflow.location_permissions.R$styleable: int[] FontFamilyFont
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_ttcIndex
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_23
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask$2: LastKnownLocationUsingLocationServicesTask$2(com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.baseflow.permissionhandler.PermissionUtils: void setRequestedPermission(android.content.Context,java.lang.String)
com.baseflow.location_permissions.R$id: int right_side
com.baseflow.location_permissions.LocationPermissionsPlugin: com.baseflow.location_permissions.LocationPermissionsPlugin$LocationServiceBroadcastReceiver mReceiver
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.baseflow.geolocator.tasks.TaskContext: com.baseflow.geolocator.OnCompletionListener getCompletionListener()
com.google.android.gms.maps.model.Cap: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.R$id: int tag_accessibility_pane_title
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_light_pressed
com.baseflow.geolocator.data.ReverseGeocodingOptions: com.baseflow.geolocator.data.Coordinate getCoordinate()
com.baseflow.geolocator.R$styleable: int Capability_queryPatterns
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.baseflow.googleapiavailability.R$id: int tag_accessibility_actions
kotlinx.coroutines.scheduling.GlobalQueue
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
com.baseflow.location_permissions.R$styleable: int GradientColor_android_centerColor
com.baseflow.googleapiavailability.R$dimen: int notification_content_margin_start
kotlinx.coroutines.scheduling.WorkQueue
com.baseflow.permissionhandler.PermissionUtils: java.util.List getManifestNames(android.content.Context,int)
com.baseflow.location_permissions.R$dimen: int compat_notification_large_icon_max_width
com.baseflow.permissionhandler.PermissionHandlerPlugin: void onDetachedFromActivityForConfigChanges()
com.baseflow.geolocator.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
kotlinx.coroutines.internal.ScopeCoroutine
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.baseflow.geolocator.R$id: int line1
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
com.baseflow.geolocator.data.wrapper.MethodResponse: void success(java.lang.Object)
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: void reportLocationUpdate(android.location.Location)
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_text_light_pressed
com.baseflow.geolocator.data.Result: io.flutter.plugin.common.MethodChannel$Result mMethodResult
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.baseflow.location_permissions.R$style: int Widget_Compat_NotificationActionContainer
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.baseflow.googleapiavailability.R$dimen: int compat_button_padding_vertical_material
com.baseflow.permissionhandler.R$id: int icon_group
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.window.embedding.SplitInfo
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: void onLocationChanged(android.location.Location)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
com.baseflow.geolocator.R
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.baseflow.geolocator.R$color: int common_google_signin_btn_text_light_disabled
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
com.baseflow.googleapiavailability.R$color: int androidx_core_secondary_text_default_material_light
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
com.baseflow.permissionhandler.R$attr: int fontProviderPackage
com.baseflow.geolocator.R$attr: int ttcIndex
com.baseflow.location_permissions.LocationPermissionsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.baseflow.googleapiavailability.R$styleable: int GradientColor_android_endY
com.baseflow.googleapiavailability.R$styleable: int SplitPairRule_splitRatio
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
kotlin.jvm.internal.Lambda: int arity
com.baseflow.geolocator.R$dimen: int notification_media_narrow_margin
com.baseflow.location_permissions.R$dimen
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.android.gms.common.internal.zzc: android.os.Parcelable$Creator CREATOR
com.baseflow.googleapiavailability.R$style: int TextAppearance_Compat_Notification_Info
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
com.baseflow.location_permissions.R$id: int tag_unhandled_key_listeners
com.baseflow.googleapiavailability.GoogleApiAvailabilityPlugin: GoogleApiAvailabilityPlugin()
com.baseflow.geolocator.data.GeocodingOptions: java.util.Locale mLocale
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: void startTask()
io.flutter.embedding.engine.FlutterJNI
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
androidx.lifecycle.ViewModel: ViewModel()
androidx.window.embedding.ActivityStack: java.util.List activities
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.baseflow.googleapiavailability.R$string: int common_google_play_services_updating_text
com.baseflow.location_permissions.R$dimen: int compat_notification_large_icon_max_height
com.baseflow.googleapiavailability.R$id: int time
com.baseflow.permissionhandler.R
androidx.core.graphics.drawable.IconCompatParcelizer
com.baseflow.location_permissions.R$styleable: int GradientColor_android_startColor
com.baseflow.permissionhandler.R$styleable: int FontFamily_fontProviderQuery
com.baseflow.location_permissions.R$id: int androidx_window_activity_scope
com.baseflow.geolocator.R$string: int common_signin_button_text
com.baseflow.geolocator.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.baseflow.googleapiavailability.R$drawable: int notify_panel_notification_icon_bg
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.baseflow.geolocator.BuildConfig: BuildConfig()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
kotlinx.coroutines.CancellableContinuationImpl
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_8
androidx.window.R$id: int rtl
com.baseflow.permissionhandler.R$layout
com.baseflow.geolocator.R$id: int accessibility_custom_action_17
com.baseflow.googleapiavailability.R$id: int ltr
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
com.baseflow.geolocator.R$drawable: int notification_bg_low_normal
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.baseflow.googleapiavailability.R$drawable: int notification_action_background
com.baseflow.geolocator.R$dimen: int notification_top_pad_large_text
com.baseflow.permissionhandler.R$dimen: int notification_action_icon_size
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_3
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
com.baseflow.googleapiavailability.R$attr: int fontProviderFetchTimeout
com.baseflow.permissionhandler.R$id: int notification_main_column
androidx.window.embedding.SplitPairRule: boolean clearTop
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.window.core.Version$Companion: Version$Companion()
com.baseflow.location_permissions.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
com.baseflow.googleapiavailability.R$attr: int queryPatterns
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_20
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.baseflow.location_permissions.R$color: int notification_action_color_filter
com.baseflow.geolocator.tasks.TaskContext: com.baseflow.geolocator.tasks.TaskContext buildForMethodResult(android.content.Context,io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.baseflow.geolocator.OnCompletionListener)
com.google.android.gms.maps.model.CircleOptions: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
com.baseflow.geolocator.R$drawable: int notification_bg_normal
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
com.baseflow.googleapiavailability.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.baseflow.googleapiavailability.R$id: int adjust_height
com.baseflow.geolocator.R$styleable: int ColorStateListItem_alpha
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask: boolean access$100(com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask)
com.baseflow.location_permissions.R$styleable: int SplitPairRule_clearTop
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.baseflow.permissionhandler.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_14
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.baseflow.permissionhandler.R$id: int actions
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_29
com.baseflow.geolocator.R$styleable: int[] LoadingImageView
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.R$attr: int splitLayoutDirection
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.baseflow.location_permissions.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.window.R$attr: int splitRatio
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.IconCompat
androidx.window.layout.FoldingFeature$State$Companion
com.baseflow.location_permissions.R$integer: R$integer()
androidx.window.core.Version: int patch
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.baseflow.googleapiavailability.R$styleable: int[] SplitPairFilter
kotlinx.coroutines.CompletionHandlerBase
com.baseflow.googleapiavailability.R$dimen: R$dimen()
com.baseflow.googleapiavailability.R$attr: R$attr()
com.baseflow.geolocator.data.CalculateDistanceOptions: com.baseflow.geolocator.data.Coordinate mSourceCoordinates
com.baseflow.geolocator.R$styleable: int GradientColor_android_endX
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.baseflow.geolocator.R$dimen: int compat_control_corner_material
com.baseflow.googleapiavailability.R$drawable: int notification_bg_low_pressed
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
kotlinx.coroutines.channels.ArrayChannel
kotlinx.coroutines.ChildHandleNode
androidx.window.layout.SidecarCompat$FirstAttachAdapter
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
com.baseflow.geolocator.R$id: int accessibility_custom_action_25
com.baseflow.geolocator.tasks.LastKnownLocationUsingLocationServicesTask: com.google.android.gms.location.FusedLocationProviderClient mFusedLocationProviderClient
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
com.baseflow.geolocator.tasks.ReverseGeocodingTask$1: void run()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.baseflow.geolocator.R$id: int icon
com.baseflow.geolocator.R$id: int light
com.baseflow.geolocator.R$id: int accessibility_custom_action_27
com.baseflow.googleapiavailability.R$id: int accessibility_custom_action_12
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.baseflow.googleapiavailability.MethodCallHandlerImpl: int GOOGLE_PLAY_SERVICES_AVAILABILITY_SERVICE_MISSING
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.google.android.gms.maps.model.PatternItem: android.os.Parcelable$Creator CREATOR
com.baseflow.permissionhandler.PermissionManager$RequestPermissionsListener: java.util.Map requestResults
io.flutter.embedding.android.FlutterTextureView
com.baseflow.geolocator.tasks.TaskFactory
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
androidx.window.core.Version: int getMajor()
com.baseflow.geolocator.data.CalculateDistanceOptions: com.baseflow.geolocator.data.Coordinate getDestinationCoordinates()
com.baseflow.permissionhandler.R$styleable: int FontFamilyFont_android_fontWeight
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.R$styleable
com.baseflow.geolocator.R$id: int tag_transition_group
androidx.window.embedding.EmbeddingAdapter
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationManagerTask: int GEOLOCATION_ACCURACY_BEST
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.baseflow.geolocator.tasks.TaskContext: android.content.Context getAndroidContext()
com.baseflow.permissionhandler.PermissionConstants: int PERMISSION_GROUP_NOTIFICATION
com.baseflow.geolocator.utils.LocaleConverter: java.lang.String LOCALE_DELIMITER
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.window.layout.WindowLayoutInfo: int hashCode()
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask$1: LocationUpdatesUsingLocationServicesTask$1(com.baseflow.geolocator.tasks.LocationUpdatesUsingLocationServicesTask)
com.baseflow.location_permissions.R$styleable: int FontFamily_fontProviderSystemFontFamily
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.baseflow.geolocator.tasks.TaskFactory: TaskFactory()
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.baseflow.permissionhandler.R$styleable: int[] FontFamily
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
com.baseflow.geolocator.tasks.TaskContext: java.lang.Object mOptions
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.baseflow.googleapiavailability.R$id: int tag_accessibility_pane_title
com.baseflow.permissionhandler.R$styleable: int GradientColorItem_android_color
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
com.baseflow.geolocator.R$drawable: int common_google_signin_btn_text_light_normal
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.baseflow.geolocator.R$id: int accessibility_custom_action_0
androidx.core.app.RemoteActionCompat
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.baseflow.googleapiavailability.R$color: int common_google_signin_btn_tint
com.baseflow.googleapiavailability.R$styleable: int SplitPairRule_splitLayoutDirection
com.baseflow.location_permissions.R$attr: int alpha
com.baseflow.geolocator.R$attr: int fontProviderPackage
com.baseflow.googleapiavailability.R$styleable: int[] SplitPlaceholderRule
com.baseflow.permissionhandler.R$dimen: int notification_big_circle_margin
com.baseflow.location_permissions.R$id: int blocking
com.baseflow.permissionhandler.R$attr: int queryPatterns
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.core.app.CoreComponentFactory
com.baseflow.geolocator.R$layout: int notification_template_custom_big
com.baseflow.location_permissions.R$styleable: int Capability_shortcutMatchRequired
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.baseflow.location_permissions.R$id: int accessibility_custom_action_30
kotlinx.coroutines.internal.LockFreeLinkedListHead
androidx.window.layout.WindowMetricsCalculatorDecorator
kotlinx.coroutines.channels.AbstractSendChannel
com.google.android.gms.common.api.internal.LifecycleCallback
com.baseflow.location_permissions.R$styleable: int GradientColor_android_endX
com.baseflow.location_permissions.R$attr: int activityName
com.baseflow.location_permissions.R$attr: int splitMinWidth
com.baseflow.permissionhandler.PermissionHandlerPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.baseflow.geolocator.R$styleable: int SplitPairFilter_secondaryActivityName
com.baseflow.permissionhandler.R$id: int accessibility_custom_action_27
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.baseflow.geolocator.utils.MainThreadDispatcher$1: MainThreadDispatcher$1(com.baseflow.geolocator.data.wrapper.ChannelResponse,java.lang.String,java.lang.String,java.lang.Object)
com.baseflow.geolocator.R$styleable: int FontFamilyFont_font
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
com.baseflow.permissionhandler.PermissionManager$RequestPermissionsListener: android.app.Activity activity
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
